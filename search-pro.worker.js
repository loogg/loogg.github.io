const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":142,\"nextId\":142,\"documentIds\":{\"0\":\"v-22991227\",\"1\":\"v-1844c2a8\",\"2\":\"v-1844c2a8#skills\",\"3\":\"v-1844c2a8#languages\",\"4\":\"v-1844c2a8#📘-我开源的项目\",\"5\":\"v-1844c2a8#agile-全家桶\",\"6\":\"v-1844c2a8#github-summary\",\"7\":\"v-1844c2a8#activity-graph\",\"8\":\"v-1844c2a8#关于本站\",\"9\":\"v-afb193f4\",\"10\":\"v-146a3a8e\",\"11\":\"v-1b842a6a\",\"12\":\"v-1b842a6a#准备工作\",\"13\":\"v-1b842a6a#呈现\",\"14\":\"v-1b842a6a#视频教程\",\"15\":\"v-3c94e123\",\"16\":\"v-3c94e123#准备工作\",\"17\":\"v-3c94e123#呈现\",\"18\":\"v-3c94e123#视频教程\",\"19\":\"v-15054f24\",\"20\":\"v-639495b8\",\"21\":\"v-ce20e166\",\"22\":\"v-2c161e71\",\"23\":\"v-2c161e71#设备驱动及posix对接分析与实践\",\"24\":\"v-54650118\",\"25\":\"v-54650118#_1、介绍\",\"26\":\"v-54650118#_1-1、特性\",\"27\":\"v-54650118#_1-2、目录结构\",\"28\":\"v-54650118#_1-3、许可证\",\"29\":\"v-54650118#_1-4、依赖\",\"30\":\"v-54650118#_2、如何打开-agile-button\",\"31\":\"v-54650118#_3、使用-agile-button\",\"32\":\"v-54650118#_3-1、示例\",\"33\":\"v-54650118#_3-2、doxygen-文档生成\",\"34\":\"v-54650118#_4、联系方式-感谢\",\"35\":\"v-04130c61\",\"36\":\"v-04130c61#_1、介绍\",\"37\":\"v-04130c61#_1-1、目录结构\",\"38\":\"v-04130c61#_1-2、许可证\",\"39\":\"v-04130c61#_1-3、依赖\",\"40\":\"v-04130c61#_2、使用-agile-console\",\"41\":\"v-04130c61#_3、新的后端接入-agile-console\",\"42\":\"v-04130c61#_4、联系方式-感谢\",\"43\":\"v-74152236\",\"44\":\"v-74152236#介绍\",\"45\":\"v-74152236#快速上手\",\"46\":\"v-74152236#api介绍\",\"47\":\"v-74152236#动态设置参数\",\"48\":\"v-74152236#联系方式-感谢\",\"49\":\"v-0ec70abc\",\"50\":\"v-0ec70abc#_1、介绍\",\"51\":\"v-0ec70abc#_1-1、目录结构\",\"52\":\"v-0ec70abc#_1-2、许可证\",\"53\":\"v-0ec70abc#_1-3、依赖\",\"54\":\"v-0ec70abc#_2、使用-agile-jsmn\",\"55\":\"v-0ec70abc#_2-1、示例\",\"56\":\"v-0ec70abc#_2-2、doxygen-文档生成\",\"57\":\"v-0ec70abc#_3、联系方式-感谢\",\"58\":\"v-7417a2ad\",\"59\":\"v-7417a2ad#_1、介绍\",\"60\":\"v-7417a2ad#_1-1、特性\",\"61\":\"v-7417a2ad#_1-2、目录结构\",\"62\":\"v-7417a2ad#_1-3、许可证\",\"63\":\"v-7417a2ad#_1-4、依赖\",\"64\":\"v-7417a2ad#_2、如何打开-agile-led\",\"65\":\"v-7417a2ad#_3、使用-agile-led\",\"66\":\"v-7417a2ad#_3-1、示例\",\"67\":\"v-7417a2ad#_3-2、doxygen-文档生成\",\"68\":\"v-7417a2ad#_4、联系方式-感谢\",\"69\":\"v-108b67e8\",\"70\":\"v-108b67e8#_1-introduction\",\"71\":\"v-108b67e8#_1-1-features\",\"72\":\"v-108b67e8#_1-2-directory-structure\",\"73\":\"v-108b67e8#_1-3-license\",\"74\":\"v-108b67e8#_2-use-agile-modbus\",\"75\":\"v-108b67e8#_2-1-transplantation\",\"76\":\"v-108b67e8#_2-2-host\",\"77\":\"v-108b67e8#_2-3-slave-machine\",\"78\":\"v-108b67e8#_2-3-1-interface-description\",\"79\":\"v-108b67e8#_2-3-2-simple-slave-access-interface\",\"80\":\"v-108b67e8#_2-4-example\",\"81\":\"v-108b67e8#_2-5-doxygen-document-generation\",\"82\":\"v-108b67e8#_3-support\",\"83\":\"v-108b67e8#_4-contact-information-thanks\",\"84\":\"v-723c8504\",\"85\":\"v-723c8504#_1、介绍\",\"86\":\"v-723c8504#_1-1-目录结构\",\"87\":\"v-723c8504#_1-2-许可证\",\"88\":\"v-723c8504#_1-3-依赖\",\"89\":\"v-723c8504#_2、如何打开-agile-telnet\",\"90\":\"v-723c8504#_3、使用-agile-telnet\",\"91\":\"v-723c8504#_4、注意事项\",\"92\":\"v-723c8504#_5、联系方式-感谢\",\"93\":\"v-7ac7f03c\",\"94\":\"v-7ac7f03c#_1、介绍\",\"95\":\"v-7ac7f03c#_1-1、特性\",\"96\":\"v-7ac7f03c#_1-2、目录结构\",\"97\":\"v-7ac7f03c#_1-3、许可证\",\"98\":\"v-7ac7f03c#_2、移植\",\"99\":\"v-7ac7f03c#_2-1、配置文件\",\"100\":\"v-7ac7f03c#基本配置\",\"101\":\"v-7ac7f03c#调试功能\",\"102\":\"v-7ac7f03c#加密算法\",\"103\":\"v-7ac7f03c#压缩算法\",\"104\":\"v-7ac7f03c#使能后端\",\"105\":\"v-7ac7f03c#_2-2、后端适配\",\"106\":\"v-7ac7f03c#_2-3、rt-thread-软件包支持\",\"107\":\"v-7ac7f03c#_3、使用-agile-upgrade\",\"108\":\"v-7ac7f03c#_3-1、快速开始\",\"109\":\"v-7ac7f03c#_3-2、api-介绍\",\"110\":\"v-7ac7f03c#_4、支持\",\"111\":\"v-7ac7f03c#_5、联系方式-感谢\",\"112\":\"v-719db3cc\",\"113\":\"v-84ff939c\",\"114\":\"v-84ff939c#参考链接\",\"115\":\"v-84ff939c#实现机制\",\"116\":\"v-84ff939c#代码实现\",\"117\":\"v-84ff939c#c99-使用不完整类型实现柔性数组\",\"118\":\"v-51f34898\",\"119\":\"v-51f34898#参考链接\",\"120\":\"v-51f34898#代码实现\",\"121\":\"v-51f34898#什么是达夫设备\",\"122\":\"v-51f34898#实现机制\",\"123\":\"v-51f34898#执行流程\",\"124\":\"v-65e523b4\",\"125\":\"v-596c2bcf\",\"126\":\"v-596c2bcf#设置方式\",\"127\":\"v-596c2bcf#linux-内核排版样式\",\"128\":\"v-596c2bcf#google排版方式\",\"129\":\"v-ca8738fe\",\"130\":\"v-01c6439c\",\"131\":\"v-a33d9420\",\"132\":\"v-a33d9420#参考\",\"133\":\"v-a33d9420#具体实现\",\"134\":\"v-a218319c\",\"135\":\"v-1c867066\",\"136\":\"v-1c867066#agile-modbus-介绍及移植使用\",\"137\":\"v-7209407f\",\"138\":\"v-df257dcc\",\"139\":\"v-df257dcc#以太网\",\"140\":\"v-df257dcc#sd卡\",\"141\":\"v-74bc627b\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,3],\"2\":[1],\"3\":[1],\"4\":[2],\"5\":[2,1],\"6\":[2],\"7\":[2,5],\"8\":[1,1],\"9\":[2],\"10\":[1],\"11\":[1],\"12\":[1,11],\"13\":[1,2],\"14\":[1],\"15\":[1],\"16\":[1,10],\"17\":[1,1],\"18\":[1],\"19\":[1],\"20\":[2],\"21\":[1],\"22\":[3],\"23\":[1],\"24\":[2],\"25\":[2,67],\"26\":[2,10],\"27\":[3,12],\"28\":[3,11],\"29\":[3,5],\"30\":[4,28],\"31\":[4,46],\"32\":[3,4],\"33\":[4,20],\"34\":[3,12],\"35\":[2],\"36\":[2,37],\"37\":[2,12],\"38\":[3,11],\"39\":[3,8],\"40\":[4,98],\"41\":[4,66],\"42\":[3,12],\"43\":[2],\"44\":[1,4],\"45\":[1,11],\"46\":[1,29],\"47\":[1,7],\"48\":[2,11],\"49\":[2],\"50\":[2,20],\"51\":[2,13],\"52\":[3,9],\"53\":[3,6],\"54\":[4,38],\"55\":[3,10],\"56\":[3,20],\"57\":[3,14],\"58\":[2],\"59\":[2,12],\"60\":[2,10],\"61\":[3,10],\"62\":[3,11],\"63\":[3,5],\"64\":[4,28],\"65\":[4,47],\"66\":[3,4],\"67\":[4,20],\"68\":[3,12],\"69\":[2],\"70\":[2,42],\"71\":[2,59],\"72\":[4,19],\"73\":[3,15],\"74\":[4,10],\"75\":[3,209],\"76\":[2,5],\"77\":[4],\"78\":[5,229],\"79\":[6,143],\"80\":[3,59],\"81\":[5,35],\"82\":[2,25],\"83\":[4,14],\"84\":[2],\"85\":[2,8],\"86\":[2,6],\"87\":[3,11],\"88\":[3,9],\"89\":[4,61],\"90\":[4,13],\"91\":[2,5],\"92\":[3,12],\"93\":[2],\"94\":[2,12],\"95\":[2,28],\"96\":[3,18],\"97\":[3,11],\"98\":[2],\"99\":[3,18],\"100\":[1,10],\"101\":[1,10],\"102\":[1,17],\"103\":[1,10],\"104\":[1,11],\"105\":[2,54],\"106\":[5,31],\"107\":[4],\"108\":[3,48],\"109\":[4,76],\"110\":[2,8],\"111\":[3,12],\"112\":[2],\"113\":[1],\"114\":[1,6],\"115\":[1,41],\"116\":[1,33],\"117\":[2,54],\"118\":[1],\"119\":[1,3],\"120\":[1,25],\"121\":[1,24],\"122\":[1,20],\"123\":[1,57],\"124\":[1],\"125\":[2],\"126\":[1,10],\"127\":[2,17],\"128\":[1,14],\"129\":[2],\"130\":[1],\"131\":[1],\"132\":[1,1],\"133\":[1],\"134\":[2],\"135\":[3],\"136\":[3],\"137\":[1],\"138\":[7],\"139\":[1,64],\"140\":[1,48],\"141\":[1]},\"averageFieldLength\":[2.260563380281689,22.16374310497106],\"storedFields\":{\"0\":{\"h\":\"关于本站\"},\"1\":{\"h\":\"关于我\",\"t\":[\"一名嵌入式工程师、开源爱好者。\"]},\"2\":{\"h\":\"Skills\"},\"3\":{\"h\":\"Languages\"},\"4\":{\"h\":\"📘 我开源的项目\"},\"5\":{\"h\":\"Agile 全家桶\",\"t\":[\"🔗介绍\"]},\"6\":{\"h\":\"Github Summary\"},\"7\":{\"h\":\"Activity Graph\",\"t\":[\"Ashutosh's github activity graph\"]},\"8\":{\"h\":\"关于本站\",\"t\":[\"🔗传送门\"]},\"9\":{\"h\":\"agile 全家桶\"},\"10\":{\"h\":\"菜谱指南\"},\"11\":{\"h\":\"煲鸡汤教程\"},\"12\":{\"h\":\"准备工作\",\"t\":[\"菜市场买鸡，让老板剁好\",\"食盐\",\"两壶开水\",\"一根大葱，两根小葱，一小块生姜\",\"(可选) 白莲子、红枣、香菇\"]},\"13\":{\"h\":\"呈现\",\"t\":[\"鸡汤1\",\"鸡汤2\"]},\"14\":{\"h\":\"视频教程\"},\"15\":{\"h\":\"腌制牛排教程\"},\"16\":{\"h\":\"准备工作\",\"t\":[\"菜市场切牛排，牛里脊位置，让老板敲好\",\"生姜，洋葱\",\"海盐，橄榄油，蛋清，黑胡椒粉，黑胡椒粒\"]},\"17\":{\"h\":\"呈现\",\"t\":[\"牛排\"]},\"18\":{\"h\":\"视频教程\"},\"19\":{\"h\":\"学习笔记\"},\"20\":{\"h\":\"软件/工具教程\"},\"21\":{\"h\":\"视频教程\"},\"22\":{\"h\":\"RT-Thread 教程\"},\"23\":{\"h\":\"设备驱动及POSIX对接分析与实践\"},\"24\":{\"h\":\"Agile Button\"},\"25\":{\"h\":\"1、介绍\",\"t\":[\"Agile Button 是基于 RT-Thread 实现的 button 软件包，提供 button 操作的 API。\",\"按键操作的状态变化为：未按下 ——> 按下 ——> 未按下。\",\"为了消除干扰，默认的消抖时间为 15ms，可以通过 agile_btn_set_elimination_time API 更改消抖时间。\",\"间隔在 500ms 内的连续操作，记为多次操作，更改对象的 repeat_cnt 属性，通过该属性可获取连续操作次数。\",\"在按下期间会计算对象的持续按下时间，可通过对象的 hold_time 属性获取。\",\"Whole\",\"Agile Button 提供了 4 种事件：\",\"BTN_PRESS_DOWN_EVENT BTN_HOLD_EVENT BTN_PRESS_UP_EVENT BTN_CLICK_EVENT \",\"可以通过 agile_btn_set_event_cb API 设置每个事件的触发回调。\",\"BTN_PRESS_DOWN_EVENT\",\"从 未按下 ——> 按下 触发一次。\",\"Down\",\"BTN_HOLD_EVENT\",\"一直处于按下状态，默认每隔 1s 触发一次，可以通过 agile_btn_set_hold_cycle_time API 更改触发周期。\",\"Hold\",\"BTN_PRESS_UP_EVENT\",\"从 按下 ——> 未按下 触发一次。\",\"Up\",\"BTN_CLICK_EVENT\",\"一次完整的操作触发一次，即：未按下 ——> 按下 ——> 未按下。\",\"注意 ：BTN_PRESS_UP_EVENT 也会被触发。\",\"Click\"]},\"26\":{\"h\":\"1.1、特性\",\"t\":[\"代码简洁易懂，充分使用 RT-Thread 提供的 API\",\"详细注释\",\"线程安全\",\"断言保护\",\"API 操作简单\"]},\"27\":{\"h\":\"1.2、目录结构\",\"t\":[\"名称\",\"说明\",\"doc\",\"文档\",\"examples\",\"例子\",\"figures\",\"素材\",\"inc\",\"头文件\",\"src\",\"源代码\"]},\"28\":{\"h\":\"1.3、许可证\",\"t\":[\"Agile Button package 遵循 LGPLv2.1 许可，详见 LICENSE 文件。\"]},\"29\":{\"h\":\"1.4、依赖\",\"t\":[\"RT-Thread 3.0+\",\"RT-Thread 4.0+\"]},\"30\":{\"h\":\"2、如何打开 Agile Button\",\"t\":[\"使用 Agile Button package 需要在 RT-Thread 的包管理器中选择它，具体路径如下：\",\"RT-Thread online packages peripheral libraries and drivers ---> [*] agile_button: A agile button package \",\"然后让 RT-Thread 的包管理器自动更新，或者使用 pkgs --update 命令更新包到 BSP 中。\"]},\"31\":{\"h\":\"3、使用 Agile Button\",\"t\":[\"帮助文档请查看 doc/doxygen/Agile_Button.chm\",\"如果未使能 PKG_AGILE_BUTTON_USING_THREAD_AUTO_INIT:\",\"agile_btn_env_init 初始化环境\",\"创建一个线程，周期调用 agile_btn_process，建议周期时间不要太长\",\"agile_btn_create / agile_btn_init 创建 / 初始化对象\",\"agile_btn_set_elimination_time 更改消抖时间，可忽略\",\"agile_btn_set_hold_cycle_time 更改持续按下触发周期时间，可忽略\",\"该操作也可在运行过程中执行\",\"agile_btn_set_two_interval_time 更改两次按键按下间隔的超时时间 该操作可以修改多击操作的响应速度\",\"agile_btn_set_event_cb 设置事件触发回调\",\"agile_btn_start 启动运行\",\"agile_btn_stop 运行过程中强制停止\"]},\"32\":{\"h\":\"3.1、示例\",\"t\":[\"使用示例在 examples 下。\"]},\"33\":{\"h\":\"3.2、Doxygen 文档生成\",\"t\":[\"使用 Doxywizard 打开 Doxyfile 运行，生成的文件在 doxygen/output 下。\",\"需要更改 Graphviz 路径。\",\"HTML 生成未使用 chm 格式的，如果使能需要更改 hhc.exe 路径。\"]},\"34\":{\"h\":\"4、联系方式 & 感谢\",\"t\":[\"维护：马龙伟\",\"主页：https://github.com/loogg/agile_button\",\"邮箱：2544047213@qq.com\"]},\"35\":{\"h\":\"Agile Console\"},\"36\":{\"h\":\"1、介绍\",\"t\":[\"Agile Console 是基于 RT-Thread 的一个简单易用的调试设备中间件。\",\"接管 console 设备，支持 device 接口和 posix 接口。\",\"后端实现极其方便，任何接口都可快速接入。\",\"注意 : 由于 Agile Console 会直接接管 console 设备，建议将 RT-ThreadKernel 中的 RT_CONSOLE_DEVICE_NAME 配置为一个不存在的设备。\",\"Agile Console 目前支持的后端接口如下：\",\"串口后端\",\"USB CDC 后端\",\"使用到 tinyusb。\",\"Telnet 后端\",\"使用到 agile_telnet。\"]},\"37\":{\"h\":\"1.1、目录结构\",\"t\":[\"名称\",\"说明\",\"doc\",\"文档\",\"examples\",\"示例\",\"figures\",\"素材\",\"inc\",\"头文件\",\"src\",\"源代码\"]},\"38\":{\"h\":\"1.2、许可证\",\"t\":[\"Agile Console package 遵循 LGPLv2.1 许可，详见 LICENSE 文件。\"]},\"39\":{\"h\":\"1.3、依赖\",\"t\":[\"RT-Thread 4.0.3\",\"RT-Thread 4.0.5 ~ master\"]},\"40\":{\"h\":\"2、使用 Agile Console\",\"t\":[\"帮助文档请查看 doc/doxygen/Agile_Console.chm\",\"使用 Agile Console package 需要在 RT-Thread 的包管理器中选择它，具体路径如下：\",\"RT-Thread online packages peripheral libraries and drivers ---> [*] agile_console: Simple debugging device Middleware. ---> (1024) Set agile_console rx buffer size (tty) Set agile_console device name (9) Set agile_console thread priority (2048) Set agile_console thread stack size [*] Enable agile_console serial example (uart1) Set serial device name [*] Enable telnet plugin [*] Enable tinyusb plugin (RT-Thread 版本 >= 4.1.0) Version (latest) ---> \",\"Set agile_console rx buffer size ：Agile Console 接受环形缓冲区大小\",\"Set agile_console device name ：Agile Console 设备名\",\"Set agile_console thread priority ：Agile Console 线程优先级\",\"Set agile_console thread stack size ：Agile Console 线程堆栈大小\",\"Enable agile_console serial example ：使能串口例程\",\"Set serial device name ：串口设备名\",\"Enable telnet plugin ：使能 telnet 后端插件\",\"使能后会选中 agile_telnet 软件包。\",\"Enable tinyusb plugin ：使能 tinyusb 后端插件\",\"RT-Thread 版本 >= 4.1.0 才有该选项。使能后会选中 tinyusb 软件包。\",\"Doxygen 文档生成\",\"使用 Doxywizard 打开 Doxyfile 运行，生成的文件在 doxygen/output 下。\",\"需要更改 Graphviz 路径。\",\"HTML 生成未使用 chm 格式的，如果使能需要更改 hhc.exe 路径。\",\"多后端演示\",\"演示使用开发板：正点原子探索者\",\"串口、Telnet 和 USB CDC 同时交互演示：\",\"whole\",\"USB CDC Ymodem 传输文件\",\"CDC Fifo 接收大小修改为 1024\",\"CDC Fifo 发送大小修改为 2048\",\"usb_file\"]},\"41\":{\"h\":\"3、新的后端接入 Agile Console\",\"t\":[\"可以参考 examples 文件夹中的例子和 agile_telnet 软件包\",\"USB CDC 后端例子中展示了如何屏蔽输入输出\",\"Agile Console 提供了后端接口结构体定义：\",\"/** * @brief Agile Console 后端接口结构体 */ struct agile_console_backend { void (*output)(rt_device_t dev, const uint8_t *buf, int len); /**< 向后端输出数据接口 */ int (*read)(rt_device_t dev, uint8_t *buf, int len); /**< 从后端读取数据接口 */ int (*control)(rt_device_t dev, int cmd, void *arg); /**< 对后端进行设置接口 */ rt_slist_t slist; /**< 单向链表节点 */ }; \",\"实现一个新的后端并接入 Agile Console 的步骤如下：\",\"定义后端变量\",\"实现后端的 output、read 和 control 接口\",\"output 接口\",\"实现时 不能调用任何可能导致线程挂起的 API 。建议将数据放入 ringbuffer 并创建线程异步发送。\",\"read 接口\",\"除了保护资源而使用的互斥锁外，其他引起阻塞的 API 不建议调用。已有的数据存放到数据区后立马返回。\",\"control 接口\",\"该接口用作控制后端。除 TCFLSH 命令，其他命令均会调用该接口。可不实现。\",\"调用 agile_console_backend_register 注册后端\",\"后端收到数据时调用 agile_console_wakeup 唤醒接收线程\"]},\"42\":{\"h\":\"4、联系方式 & 感谢\",\"t\":[\"维护：马龙伟\",\"主页：https://github.com/loogg/agile_console\",\"邮箱：2544047213@qq.com\"]},\"43\":{\"h\":\"Agile Ftp\"},\"44\":{\"h\":\"介绍\",\"t\":[\"基于RT-Thread，运行在嵌入式上的高并发高性能轻量级FTP服务器。\"]},\"45\":{\"h\":\"快速上手\",\"t\":[\"#include \\\"ftp.h\\\"\",\"ftp_init(2048, 27, 100);\",\"默认端口21，默认用户名和密码都为 loogg\"]},\"46\":{\"h\":\"API介绍\",\"t\":[\"ftp_get_max_session_num 获取最大客户端数量\",\"ftp_set_max_session_num 设置最大客户端数量\",\"ftp_get_session_username 获取客户端用户名\",\"ftp_set_session_username 设置客户端用户名\",\"ftp_get_session_password 获取客户端密码\",\"ftp_set_session_password 设置客户端密码\",\"ftp_get_session_welcome_msg 获取客户端欢迎词\",\"ftp_set_session_welcome_msg 设置客户端欢迎词\",\"ftp_session_force_quit 强制关闭所有客户端连接(异步)\",\"ftp_force_restart 强制重启服务器(异步)\",\"ftp_get_port 获取服务器监听端口\",\"ftp_set_port 设置服务器监听端口\",\"ftp_init 初始化ftp服务\"]},\"47\":{\"h\":\"动态设置参数\",\"t\":[\"使用 ftp_force_restart 和 ftp_session_force_quit\"]},\"48\":{\"h\":\"联系方式 & 感谢\",\"t\":[\"维护：malongwei\",\"主页：https://github.com/loogg/ftp\",\"邮箱：2544047213@qq.com\"]},\"49\":{\"h\":\"Agile Jsmn\"},\"50\":{\"h\":\"1、介绍\",\"t\":[\"jsmn 是一个超轻巧，携带方便，单文件，适用于单片机中存储空间有限的环境，简单的可以作为 ANSI-C 标准的 JSON 解析器。\",\"Agile Jsmn 在 jsmn 的基础上参照 cJSON 增加了一些 API 以实现简单的对象获取操作。\"]},\"51\":{\"h\":\"1.1、目录结构\",\"t\":[\"名称\",\"说明\",\"doc\",\"文档目录\",\"examples\",\"例程目录\",\"jsmn-1.0.0\",\"jsmn-1.0.0 源码目录\",\"util\",\"Agile Jsmn 源码目录\"]},\"52\":{\"h\":\"1.2、许可证\",\"t\":[\"Agile Jsmn 遵循 MIT 许可，详见 LICENSE 文件。\"]},\"53\":{\"h\":\"1.3、依赖\",\"t\":[\"无依赖，使用标准 C 库开发，可直接在电脑上编译。\"]},\"54\":{\"h\":\"2、使用 Agile Jsmn\",\"t\":[\"帮助文档请查看 doc/doxygen/Agile_Jsmn.chm\",\"使用：\",\"jsmn_init 初始化 jsmn 解析器\",\"使用 jsmn_parse 将 json 数据解析到 jsmntok_t 数组中\",\"JSMN_ItemInit 初始化根节点\",\"调用相应 API 获取自己想要的 json 对象\",\"值返回的是字符串\",\"如果值是整数或浮点数，需要自己使用 atoi 或 atof 转换\",\"如果需要判断值是不是 null，需要对字符串进行 strstr / strcmp 判断\"]},\"55\":{\"h\":\"2.1、示例\",\"t\":[\"使用示例在 examples 下。\",\"使用 gcc 可直接 make 编译，在电脑上运行。\"]},\"56\":{\"h\":\"2.2、Doxygen 文档生成\",\"t\":[\"使用 Doxywizard 打开 Doxyfile 运行，生成的文件在 doxygen/output 下。\",\"需要更改 Graphviz 路径。\",\"HTML 生成未使用 chm 格式的，如果使能需要更改 hhc.exe 路径。\"]},\"57\":{\"h\":\"3、联系方式 & 感谢\",\"t\":[\"维护：马龙伟\",\"主页：https://github.com/loogg/agile_jsmn\",\"邮箱：2544047213@qq.com\",\"jsmn 原作者主页：https://github.com/zserge/jsmn\"]},\"58\":{\"h\":\"Agile Led\"},\"59\":{\"h\":\"1、介绍\",\"t\":[\"Agile Led 是基于 RT-Thread 实现的 led 软件包，提供 led 操作的 API。\"]},\"60\":{\"h\":\"1.1、特性\",\"t\":[\"代码简洁易懂，充分使用 RT-Thread 提供的 API\",\"详细注释\",\"线程安全\",\"断言保护\",\"API 操作简单\"]},\"61\":{\"h\":\"1.2、目录结构\",\"t\":[\"名称\",\"说明\",\"doc\",\"文档目录\",\"examples\",\"例子目录\",\"inc\",\"头文件目录\",\"src\",\"源代码目录\"]},\"62\":{\"h\":\"1.3、许可证\",\"t\":[\"Agile Led package 遵循 LGPLv2.1 许可，详见 LICENSE 文件。\"]},\"63\":{\"h\":\"1.4、依赖\",\"t\":[\"RT-Thread 3.0+\",\"RT-Thread 4.0+\"]},\"64\":{\"h\":\"2、如何打开 Agile Led\",\"t\":[\"使用 Agile Led package 需要在 RT-Thread 的包管理器中选择它，具体路径如下：\",\"RT-Thread online packages peripheral libraries and drivers ---> [*] agile_led: A agile led package \",\"然后让 RT-Thread 的包管理器自动更新，或者使用 pkgs --update 命令更新包到 BSP 中。\"]},\"65\":{\"h\":\"3、使用 Agile Led\",\"t\":[\"帮助文档请查看 doc/doxygen/Agile_Led.chm\",\"如果未使能 PKG_AGILE_LED_USING_THREAD_AUTO_INIT:\",\"agile_led_env_init 初始化环境\",\"创建一个线程，周期调用 agile_led_process，建议周期时间不要太长\",\"agile_led_create / agile_led_init 创建 / 初始化对象\",\"agile_led_start 启动运行\",\"agile_led_dynamic_change_light_mode / agile_led_static_change_light_mode 更改模式\",\"该操作也可在启动运行前执行\",\"如果需要感知对象执行结束，agile_led_set_compelete_callback 设置回调函数\",\"过程中需要强制停止，使用 agile_led_stop\",\"agile_led_on / agile_led_off / agile_led_toggle 单独操作对象\"]},\"66\":{\"h\":\"3.1、示例\",\"t\":[\"使用示例在 examples 下。\"]},\"67\":{\"h\":\"3.2、Doxygen 文档生成\",\"t\":[\"使用 Doxywizard 打开 Doxyfile 运行，生成的文件在 doxygen/output 下。\",\"需要更改 Graphviz 路径。\",\"HTML 生成未使用 chm 格式的，如果使能需要更改 hhc.exe 路径。\"]},\"68\":{\"h\":\"4、联系方式 & 感谢\",\"t\":[\"维护：马龙伟\",\"主页：https://github.com/loogg/agile_led\",\"邮箱：2544047213@qq.com\"]},\"69\":{\"h\":\"Agile Modbus\"},\"70\":{\"h\":\"1. Introduction\",\"t\":[\"Agile Modbus is a lightweight modbus protocol stack that meets the needs of users in any scenario.\",\"ModbusProtocol\",\"Online documentation: API Manual\",\"The examples folder provides examples on PC\",\"See examples on MCU mcu_demos\",\"Bootloader based on RT-Thread on AT32F437 that supports Modbus firmware upgrade: AT32F437_Boot\",\"Bootloader based on RT-Thread on HPM6750 that supports Modbus firmware upgrade: HPM6750_Boot\"]},\"71\":{\"h\":\"1.1. Features\",\"t\":[\"Supports rtu and tcp protocols, is developed using pure C, does not involve any hardware interface, and can be used directly on any form of hardware.\",\"Since it is developed using pure C and does not involve hardware, it can run the tcp protocol on the serial port and the rtu protocol on the network.\",\"Support custom protocols compliant with modbus format.\",\"Supports multiple masters and multiple slaves at the same time.\",\"It is easy to use. You only need to initialize the rtu or tcp handle and call the corresponding API to package and unpack.\"]},\"72\":{\"h\":\"1.2. Directory structure\",\"t\":[\"Name\",\"Description\",\"doc\",\"documentation\",\"examples\",\"examples\",\"figures\",\"materials\",\"inc\",\"header file\",\"src\",\"source code\",\"util\",\"Provides simple and practical components\"]},\"73\":{\"h\":\"1.3. License\",\"t\":[\"Agile Modbus complies with the Apache-2.0 license, see the LICENSE file for details.\"]},\"74\":{\"h\":\"2. Use Agile Modbus\",\"t\":[\"Please view the help document doc/doxygen/Agile_Modbus.chm\"]},\"75\":{\"h\":\"2.1. Transplantation\",\"t\":[\"Users need to implement the send data, wait for data reception to end and clear the receive buffer functions of the hardware interface\",\"Regarding waiting for data reception to end, the following ideas are provided:\",\"General method\",\"Every 20 /50 ms (this time can be set according to the baud rate and hardware, here is just a reference value) reads data from the hardware interface and stores it in the buffer and updates the offset until it cannot be read or the buffer is full. , exit reading.\",\"This applies to both bare metal and operating systems, which can accomplish blocking via select or semaphore.\",\"Serial port DMA + IDLE interrupt mode\",\"Configure the DMA + IDLE interrupt, enable the flag in the interrupt, and determine whether the flag is set in the application program.\",\"However, this solution is prone to problems. If the data bytes are slightly staggered, it will not be a frame. The first option is recommended.\",\"Host:\",\"agile_modbus_rtu_init / agile_modbus_tcp_init initializes RTU/TCP environment\",\"agile_modbus_set_slave sets the slave address\",\"Clear the receive cache\",\"agile_modbus_serialize_xxx package request data\",\"Send data\",\"Waiting for data reception to end\",\"agile_modbus_deserialize_xxx Parse response data\",\"Data processed by users\",\"Slave machine:\",\"Implement the agile_modbus_slave_callback_t type callback function\",\"agile_modbus_rtu_init / agile_modbus_tcp_init initializes RTU/TCP environment\",\"agile_modbus_set_slave sets the slave address\",\"Waiting for data reception to end\",\"agile_modbus_slave_handle processes request data\",\"Clear the receive buffer (optional)\",\"Send data\",\"Special function code\",\"You need to call the agile_modbus_set_compute_meta_length_after_function_cb and agile_modbus_set_compute_data_length_after_meta_cb APIs to set the callbacks for special function codes to be processed in master-slave mode.\",\"agile_modbus_set_compute_meta_length_after_function_cb\",\"msg_type == AGILE_MODBUS_MSG_INDICATION: Returns the data element length of the host request message (uint8_t type). If it is not a special function code, 0 must be returned.\",\"msg_type == MSG_CONFIRMATION: Returns the data element length (uint8_t type) of the slave response message. If it is not a special function code, 1 must be returned.\",\"agile_modbus_set_compute_data_length_after_meta_cb\",\"msg_type == AGILE_MODBUS_MSG_INDICATION: Returns the data length after the data element of the host request message. If it is not a special function code, 0 must be returned.\",\"msg_type == MSG_CONFIRMATION: Returns the data length after the data element of the slave response message. If it is not a special function code, it must return 0.\",\"agile_modbus_rtu_init / agile_modbus_tcp_init\",\"When initializing the RTU/TCP environment, the user needs to pass in the send buffer and receive buffer. It is recommended that the size of both buffers is AGILE_MODBUS_MAX_ADU_LENGTH (260) bytes. Special function code is determined by the user according to the agreement.\",\"But for small memory MCUs, these two buffers can also be set small, and all APIs will judge the buffer size:\",\"Send buffer setting: If expected request data length or expected response data length is greater than set send buffer size, an exception is returned.\",\"Receive buffer setting: If the message length requested by the host is greater than the set receive buffer size, an exception will be returned. This is reasonable. When a small memory MCU is used as a slave, certain function codes must be restricted.\"]},\"76\":{\"h\":\"2.2. Host\",\"t\":[\"See 2.1. Transplantation.\"]},\"77\":{\"h\":\"2.3. Slave machine\"},\"78\":{\"h\":\"2.3.1. Interface description\",\"t\":[\"Introduction to agile_modbus_slave_handle\",\" int agile_modbus_slave_handle(agile_modbus_t *ctx, int msg_length, uint8_t slave_strict, agile_modbus_slave_callback_t slave_cb, const void *slave_data, int *frame_length) \",\"msg_length: The length of data received after waiting for the end of data reception.\",\"slave_strict: slave address strictness check (0: Do not judge whether the address is consistent, it will be processed by user callback; 1: The address must be consistent, otherwise the callback will not be called and the response data will not be packaged).\",\"slave_cb: agile_modbus_slave_callback_t type callback function, implemented and passed in by the user. If it is NULL, all function codes can respond and are successful, but the register data is still 0.\",\"slave_data: slave callback function private data.\",\"frame_length: Get the length of the parsed modbus data frame. The meaning of this parameter is:\",\"There is dirty data at the end: it can still be parsed successfully and tells the user the real modbus frame length, which the user can process.\",\"Data sticky packet: The data consists of a complete frame of modbus data + a partial modbus data frame. After the user obtains the real modbus frame length, he can remove the processed modbus data frame and read the hardware interface data and the current one again. Part of the modbus data frame forms a new frame\",\"This parameter is often used when modbus broadcast transmits big data (such as custom function code broadcast to upgrade firmware). Ordinary slave responses are one question and one answer, and only the complete data frame is processed. It is recommended to Execute clear receive cache\",\"Introduction to agile_modbus_slave_callback_t\",\" /** * @brief slave callback function * @param ctx modbus handle * @param slave_info slave information body * @param data private data * @return =0: normal; * <0: Abnormal * (-AGILE_MODBUS_EXCEPTION_UNKNOW(-255): Unknown exception, the slave will not package the response data) * (Other negative exception codes: package exception response data from the opportunity) */ typedef int (*agile_modbus_slave_callback_t)(agile_modbus_t *ctx, struct agile_modbus_slave_info *slave_info, const void *data); \",\"agile_modbus_slave_info:\",\"sft: Contains slave address and function code attributes, which can be used in callbacks\",\"rsp_length: response data length pointer, its value needs to be updated when processing special function code in the callback, otherwise not allowed to change\",\"address: register address (not used by all function codes)\",\"nb: number (not used by all function codes)\",\"buf: data field required by different function codes (not used by all function codes)\",\"send_index: the current index of the send buffer (not used by all function codes)\",\"agile_modbus_slave_info used by different function codes\",\"AGILE_MODBUS_FC_READ_COILS、AGILE_MODBUS_FC_READ_DISCRETE_INPUTS\",\"The address, nb, and send_index attributes need to be used, and the agile_modbus_slave_io_set API needs to be called to store the IO data in the data area starting from ctx->send_buf + send_index.\",\"AGILE_MODBUS_FC_READ_HOLDING_REGISTERS、AGILE_MODBUS_FC_READ_INPUT_REGISTERS\",\"The address, nb, and send_index attributes need to be used, and the agile_modbus_slave_register_set API needs to be called to store the register data in the data area starting from ctx->send_buf + send_index.\",\"AGILE_MODBUS_FC_WRITE_SINGLE_COIL、AGILE_MODBUS_FC_WRITE_SINGLE_REGISTER\",\"You need to use the address and buf attributes, force buf to the int * type, and get the value and store it in a register.\",\"AGILE_MODBUS_FC_WRITE_MULTIPLE_COILS\",\"The address, nb, buf attributes need to be used, and the agile_modbus_slave_io_get API needs to be called to obtain the IO data to be written.\",\"AGILE_MODBUS_FC_WRITE_MULTIPLE_REGISTERS\",\"The address, nb, and buf attributes need to be used, and the agile_modbus_slave_register_get API needs to be called to obtain the register data to be written.\",\"AGILE_MODBUS_FC_MASK_WRITE_REGISTER\",\"You need to use the address and buf attributes, pass (buf[0] << 8) + buf[1] to get the and value, pass (buf[2] << 8) + buf[3 ] Gets the or value. Get the register value data, perform the data = (data & and) | (or & (~and)) operation to update the data value, and write it to the register.\",\"AGILE_MODBUS_FC_WRITE_AND_READ_REGISTERS\",\"You need to use the address, buf, send_index attributes, pass (buf[0] << 8) + buf[1] to get the number of registers to be read, pass (buf[2] << 8) + buf[3] Get the register address to be written, and use (buf[4] << 8) + buf[5] to get the number of registers to be written. You need to call the agile_modbus_slave_register_get API to obtain the register data to be written, and call the agile_modbus_slave_register_set API to store the register data in the data area starting from ctx->send_buf + send_index.\",\"Custom function code\",\"You need to use the send_index, nb, and buf attributes, and the user processes the data in the callback.\",\"send_index: current index of send buffer\",\"nb: PUD - 1, which is the modbus data field length\",\"buf: starting position of modbus data field\",\"Note: After the user fills data into the send buffer in the callback, the rsp_length value of agile_modbus_slave_info needs to be updated.\"]},\"79\":{\"h\":\"2.3.2. Simple slave access interface\",\"t\":[\"Agile Modbus provides an implementation of agile_modbus_slave_callback_t, allowing users to access it simply and conveniently.\",\"See examples/slave for examples of usage.\",\"How to use:\",\" #include \\\"agile_modbus.h\\\" #include \\\"agile_modbus_slave_util.h\\\" const agile_modbus_slave_util_t slave_util = { /* User implementation */ }; agile_modbus_slave_handle(ctx, read_len, 0, agile_modbus_slave_util_callback, &slave_util, NULL); \",\"Introduction to agile_modbus_slave_util_callback\",\"An implementation of agile_modbus_slave_callback_t provided by Agile Modbus, which requires agile_modbus_slave_util_t type variable pointer as private data.\",\"The private data is NULL, all function codes can respond and are successful, but the register data is still 0.\",\"Introduction to agile_modbus_slave_util_t\",\" typedef struct agile_modbus_slave_util { const agile_modbus_slave_util_map_t *tab_bits; /**< Coil register definition array */ int nb_bits; /**< Number of coil register definition arrays */ const agile_modbus_slave_util_map_t *tab_input_bits; /**< Discrete input register definition array */ int nb_input_bits; /**< Number of discrete input register definition arrays */ const agile_modbus_slave_util_map_t *tab_registers; /**< Holding register definition array */ int nb_registers; /**< Number of holding register definition arrays */ const agile_modbus_slave_util_map_t *tab_input_registers; /**< Input register definition array */ int nb_input_registers; /**< Number of input register definition arrays */ int (*addr_check)(agile_modbus_t *ctx, struct agile_modbus_slave_info *slave_info); /**< Address check interface */ int (*special_function)(agile_modbus_t *ctx, struct agile_modbus_slave_info *slave_info); /**< Special function code processing interface */ int (*done)(agile_modbus_t *ctx, struct agile_modbus_slave_info *slave_info, int ret); /**< Processing end interface */ } agile_modbus_slave_util_t; \",\"Register related\",\"Users need to implement the definitions of bits, input_bits, registers and input_registers. If a register is defined as NULL, the function code corresponding to the register can respond and is successful, but the register data is all 0.\",\"Interface calling process\",\"SlaveCallback\",\"Introduction to agile_modbus_slave_util_map\",\" typedef struct agile_modbus_slave_util_map { int start_addr; /**< starting address */ int end_addr; /**< end address */ int (*get)(void *buf, int bufsz); /**< Get register data interface */ int (*set)(int index, int len, void *buf, int bufsz); /**< Set register data interface */ } agile_modbus_slave_util_map_t; \",\"Precautions:\",\"The number of registers determined by the start address and end address is limited. Changing the size of the map_buf array inside the function can make it larger.\",\"bit register < 250\",\"register register < 125\",\"The interface function is NULL, and the function code corresponding to the register can respond and is successful.\",\"get interface\",\"Copy all data in the address field to buf.\",\"set interface\",\"index: offset within the address field\",\"len: length\",\"Modify data based on index and len.\"]},\"80\":{\"h\":\"2.4. Example\",\"t\":[\"Examples on PC are provided in the examples folder, which can be compiled and run under WSL or Linux.\",\"Examples of RTU/TCP master and slave\",\"Examples of special function codes\",\"RTU point-to-point transmission of files: Demonstrates the use of special function codes\",\"RTU broadcast transmission file: Demonstrates the use of frame_length in agile_modbus_slave_handle\",\"mcu_demos provides examples on MCU.\",\"AT32F437_Boot A Bootloader based on RT-Thread implemented on AT32F437 that supports Modbus firmware upgrade.\",\"HPM6750_Boot A Bootloader based on RT-Thread implemented on HPM6750 that supports Modbus firmware upgrade.\"]},\"81\":{\"h\":\"2.5. Doxygen document generation\",\"t\":[\"Use Doxywizard to open Doxyfile and run it. The generated file will be under doxygen/output.\",\"Graphviz path needs to be changed.\",\"HTML is generated without using chm format. If it is enabled, you need to change the hhc.exe path.\"]},\"82\":{\"h\":\"3. Support\",\"t\":[\"zanshang\",\"If Agile Modbus solves your problem, you might as well scan the QR code above and invite me for a cup of coffee ~\"]},\"83\":{\"h\":\"4. Contact information & thanks\",\"t\":[\"Maintenance: Ma Longwei\",\"Home page: https://github.com/loogg/agile_modbus\",\"Email: 2544047213@qq.com\"]},\"84\":{\"h\":\"Agile Telnet\"},\"85\":{\"h\":\"1、介绍\",\"t\":[\"从2.0开始agile_telnet作为agile_console的插件使用。\",\"如果只想使用telnet作为console设备，请访问v1.0.0。\"]},\"86\":{\"h\":\"1.1 目录结构\",\"t\":[\"名称\",\"说明\",\"inc\",\"头文件目录\",\"src\",\"源代码目录\"]},\"87\":{\"h\":\"1.2 许可证\",\"t\":[\"agile_telnet package 遵循 LGPLv2.1 许可，详见 LICENSE 文件。\"]},\"88\":{\"h\":\"1.3 依赖\",\"t\":[\"RT-Thread 3.0+\",\"SAL\",\"POSIX\",\"DFS\",\"agile_console\"]},\"89\":{\"h\":\"2、如何打开 agile_telnet\",\"t\":[\"使用 agile_telnet package 需要在 RT-Thread 的包管理器中选择它，具体路径如下：\",\"RT-Thread online packages IoT - internet of things ---> [*] agile_telnet: TCP debug for Ethernet ---> (2048) Set agile_telnet thread stack size (26) Set agile_telnet thread priority (23) Set agile_telnet listen port (256) Set agile_telnet rx buffer size (2048) Set agile_telnet tx buffer size (3) Set agile_telnet client timeout(min) Version (latest) ---> \",\"Set agile_telnet thread stack size：agile_telnet线程堆栈大小\",\"Set agile_telnet thread priority：agile_telnet线程优先级\",\"Set agile_telnet listen port：agile_telnet监听端口号\",\"Set agile_telnet rx buffer size：agile_telnet接收环形缓冲区大小\",\"Set agile_telnet tx buffer size：agile_telnet发送环形缓冲区大小\",\"Set agile_telnet client timeout(min)：agile_telnet客户端默认超时时间(3分钟)\",\"Version：大于v1.0.0版本会强制选中agile_console软件包，并作为其插件使用\",\"然后让 RT-Thread 的包管理器自动更新，或者使用 pkgs --update 命令更新包到 BSP 中。\"]},\"90\":{\"h\":\"3、使用 agile_telnet\",\"t\":[\"在打开 agile_telnet package 后，当进行 bsp 编译时，它会被加入到 bsp 工程中进行编译。\",\"该软件包作为agile_console的插件使用。\"]},\"91\":{\"h\":\"4、注意事项\",\"t\":[\"使用以太网设备请使能以太网设备和lwip，这些agile_telnet不会强制打开，只强制选中到SAL层。\"]},\"92\":{\"h\":\"5、联系方式 & 感谢\",\"t\":[\"维护：malongwei\",\"主页：https://github.com/loogg/agile_telnet\",\"邮箱：2544047213@qq.com\"]},\"93\":{\"h\":\"Agile Upgrade\"},\"94\":{\"h\":\"1、介绍\",\"t\":[\"Agile Upgrade: 用于快速构建 bootloader 的中间件。\",\"example 文件夹提供 PC 上的示例\",\"MCU 上的示例查看 MCU Demos\"]},\"95\":{\"h\":\"1.1、特性\",\"t\":[\"适配 RT-Thread 官方固件打包工具 (图形化工具及命令行工具)\",\"使用纯 C 开发，不涉及任何硬件接口，可在任何形式的硬件上直接使用\",\"加密、压缩支持如下： \",\" AES256\",\" fastlz\",\" quicklz\",\" gzip\",\"原生适配 file 及 fal 操作接口\",\"移植简单，实现自定义的后端只需适配几个操作接口\",\"使用简单，几行代码即可实现固件升级\",\"全过程日志输出\",\"提供过程回调，可将过程及进度显示在自定义硬件上\"]},\"96\":{\"h\":\"1.2、目录结构\",\"t\":[\"名称\",\"说明\",\"adapter\",\"已适配的后端\",\"doc\",\"文档\",\"example\",\"例子\",\"figures\",\"素材\",\"inc\",\"头文件\",\"porting\",\"移植文件\",\"src\",\"源代码\",\"tools\",\"固件打包工具\"]},\"97\":{\"h\":\"1.3、许可证\",\"t\":[\"Agile Upgrade 遵循 Apache-2.0 许可，详见 LICENSE 文件。\"]},\"98\":{\"h\":\"2、移植\"},\"99\":{\"h\":\"2.1、配置文件\",\"t\":[\"Agile Upgrade 依赖 agile_upgrade_config.h 头文件，修改该头文件中的配置可以设置库的基本行为，禁用未使用的模块和特性，在编译时调整内存缓冲区的大小等等。\",\"porting 文件夹下提供了配置文件模板 agile_upgrade_conf_template.h，复制它并重命名为 agile_upgrade_config.h 并在工程中包含路径即可。\"]},\"100\":{\"h\":\"基本配置\",\"t\":[\"使能版本号比较，开启则比较固件版本，固件版本一致不进行升级\",\"#define AGILE_UPGRADE_ENABLE_VERSION_COMPARE \"]},\"101\":{\"h\":\"调试功能\",\"t\":[\"使能日志输出\",\"#define AGILE_UPGRADE_ENABLE_LOG \",\"日志输出调用的接口\",\"#define AGILE_UPGRADE_LOG_PRINTF printf \"]},\"102\":{\"h\":\"加密算法\",\"t\":[\"使能 AES256\",\"#define AGILE_UPGRADE_ENABLE_AES \",\"AES256 初始化向量，16 个字符\",\"#define AGILE_UPGRADE_AES_IV \\\"0123456789ABCDEF\\\" \",\"AES256 密钥，32 个字符\",\"#define AGILE_UPGRADE_AES_KEY \\\"0123456789ABCDEF0123456789ABCDEF\\\" \"]},\"103\":{\"h\":\"压缩算法\",\"t\":[\"使能 fastlz\",\"#define AGILE_UPGRADE_ENABLE_FASTLZ \",\"使能 quicklz\",\"#define AGILE_UPGRADE_ENABLE_QUICKLZ \"]},\"104\":{\"h\":\"使能后端\",\"t\":[\"使能 fal 后端\",\"#define AGILE_UPGRADE_ENABLE_FAL \",\"使能 file 后端\",\"#define AGILE_UPGRADE_ENABLE_FILE \"]},\"105\":{\"h\":\"2.2、后端适配\",\"t\":[\"原生适配 file 及 fal 操作接口，自定义后端只需要实现 agile_upgrade_ops 接口即可。可以参考 adapter 中后端的实现。\",\"MCU Demos 的 MinimalistBoot 示例提供了直接操作 片内 Flash 和 SPI Flash 后端实现，可作为参考。\",\"struct agile_upgrade_ops { int (*init)(agile_upgrade_t *agu); int (*read)(agile_upgrade_t *agu, int offset, uint8_t *buf, int size); int (*write)(agile_upgrade_t *agu, int offset, const uint8_t *buf, int size); int (*erase)(agile_upgrade_t *agu, int offset, int size); int (*deinit)(agile_upgrade_t *agu); }; \",\"init\",\"初始化后端，可以使用应用层传递的 agu->user_data 参数，并将生成的句柄传递给 agu->ops_data。不需要可不实现。\",\"read\",\"从后端读取数据，offset 为负数时表示从尾部读入。可以使用 agu->ops_data 参数。\",\"write\",\"向后端写入数据，offset 为负数时表示向尾部写入。可以使用 agu->ops_data 参数。\",\"erase\",\"擦除后端数据。可以使用 agu->ops_data 参数。不需要可不实现。\",\"deinit\",\"反初始化后端。可以使用 agu->ops_data 参数。不需要可不实现。\"]},\"106\":{\"h\":\"2.3、RT-Thread 软件包支持\",\"t\":[\"在 RT-Thread 的包管理器中选中即可，不需要自行移植配置文件。\",\" RT-Thread online packages system packages ---> [*] agile_upgrade: Middleware for fast building bootloader. ---> [*] Enable debug log output [ ] Enable AES decrypt [ ] Enable fastlz decompress [*] Enable quicklz decompress [ ] Enable fal adapter [ ] Enable file adapter [*] Enable version compare \"]},\"107\":{\"h\":\"3、使用 Agile Upgrade\"},\"108\":{\"h\":\"3.1、快速开始\",\"t\":[\"移植操作完成后，几行代码即可实现固件升级。\",\"#include <agile_upgrade.h> extern const struct agile_upgrade_ops agile_upgrade_file_ops; int main(void) { agile_upgrade_t src_agu = {0}; src_agu.name = \\\"src\\\"; src_agu.user_data = \\\"./src.rbl\\\"; src_agu.ops = &agile_upgrade_file_ops; agile_upgrade_t dst_agu = {0}; dst_agu.name = \\\"dst\\\"; dst_agu.user_data = \\\"./dst.bin\\\"; dst_agu.ops = &agile_upgrade_file_ops; agile_upgrade_release(&src_agu, &dst_agu, 0); return 0; } \",\"agile_upgrade\",\"struct agile_upgrade { const char *name; int len; const void *user_data; const struct agile_upgrade_ops *ops; const void *ops_data; }; \",\"name\",\"后端名称，日志打印中会使用。如果为 NULL，日志中会输出为 UNKNOWN。\",\"len\",\"后端能操作空间大小(Byte)，校验固件和搬运时进行判断。如果为 0 则不进行判断。\",\"user_data\",\"后端私有数据，一般用于 agu->ops->init 中作为初始化的参数。\",\"ops\",\"后端操作接口。\",\"ops_data\",\"后端操作接口私有数据。\"]},\"109\":{\"h\":\"3.2、API 介绍\",\"t\":[\"固件校验\",\"int agile_upgrade_verify(agile_upgrade_t *agu, agile_upgrade_fw_info_t *fw_info, uint8_t is_tail); \",\"参数\",\"描述\",\"agu\",\"操作对象\",\"fw_info\",\"固件信息\",\"is_tail\",\"0：固件信息在头部1：固件信息在尾部\",\"固件升级\",\"int agile_upgrade_release(agile_upgrade_t *src_agu, agile_upgrade_t *dst_agu, uint8_t is_erase); \",\"参数\",\"描述\",\"src_agu\",\"源操作对象\",\"dst_agu\",\"目标操作对象\",\"is_erase\",\"升级完成后是否需要擦除源操作对象\",\"设置钩子函数\",\"固件解析按步骤执行，每一步执行前会调用步骤钩子函数；异常时会调用异常钩子函数；每解析一包数据会调用进度钩子函数。\",\"步骤枚举\",\"typedef enum { AGILE_UPGRADE_STEP_INIT = 0, AGILE_UPGRADE_STEP_VERIFY, AGILE_UPGRADE_STEP_ALGO, AGILE_UPGRADE_STEP_UPGRADE, AGILE_UPGRADE_STEP_FINISH } agile_upgrade_step_t; \",\"错误码枚举\",\"typedef enum { AGILE_UPGRADE_EOK = 0, AGILE_UPGRADE_ERR = -1, AGILE_UPGRADE_EVERIFY = -2, AGILE_UPGRADE_EFULL = -3, AGILE_UPGRADE_EREAD = -4, AGILE_UPGRADE_EWRITE = -5, AGILE_UPGRADE_EERASE = -6, AGILE_UPGRADE_EINVAL = -7 } agile_upgrade_err_t; \",\"设置步骤钩子函数\",\"void agile_upgrade_set_step_hook(agile_upgrade_step_callback_t hook); typedef void (*agile_upgrade_step_callback_t)(int step); \",\"设置进度钩子函数\",\"void agile_upgrade_set_progress_hook(agile_upgrade_progress_callback_t hook); typedef void (*agile_upgrade_progress_callback_t)(uint32_t cur_size, uint32_t total_size); \",\"设置错误钩子函数\",\"void agile_upgrade_set_error_hook(agile_upgrade_error_callback_t hook); typedef void (*agile_upgrade_error_callback_t)(int step, int code); \"]},\"110\":{\"h\":\"4、支持\",\"t\":[\"zanshang\",\"如果 Agile Upgrade 解决了你的问题，不妨扫描上面二维码请我 喝杯咖啡 ~\"]},\"111\":{\"h\":\"5、联系方式 & 感谢\",\"t\":[\"维护：马龙伟\",\"主页：https://github.com/loogg/agile_upgrade\",\"邮箱：2544047213@qq.com\"]},\"112\":{\"h\":\"C/C++\"},\"113\":{\"h\":\"柔性数组\"},\"114\":{\"h\":\"参考链接\",\"t\":[\"C语言中的柔性数组 C语言结构体中char[0]和char[1]的用法\"]},\"115\":{\"h\":\"实现机制\",\"t\":[\"在结构体最后加 char[0] 或 char[1] 的用法是GNU C的扩展，在ISO/IEC 9899-1999里面，这么写是非法的。\",\"这种用法在C99中叫做 柔性数组。柔性数组成员前面必须至少有一个其它类型成员。包含柔性数组成员的结构要用malloc进行动态内存分配，并且分配的内存应该大于结构的大小，以适应柔性数组的预期大小。\",\"相关信息\",\"主要是为了方便管理内存缓冲区，如果你直接使用指针而不使用数组，那么，你在分配内存缓冲区时，就必须分配结构体一次，然后再分配结构体内的指针一次，（而此时分配的内存已经与结构体的内存不连续了，所以要分别管理即申请和释放）而如果使用数组，那么只需要一次就可以全部分配出来，反过来，释放时也是一样，使用数组，一次释放，使用指针，得先释放结构体内的指针，再释放结构体。还不能颠倒次序。\",\"其实就是 分配一段连续的的内存，减少内存的碎片化。\"]},\"116\":{\"h\":\"代码实现\",\"t\":[\"struct Msg { ... // 其它成员 ... // 其它成员 int nLen; // 一般char data[0]的前面会加一个长度nLen表示data的大小 char data[0]; // char[0]或char[1]必须放在最后 }; \",\"我们要知道的一点就是：char data[0] 这个数组是没有元素的，它的地址紧跟着nLen后的地址，如果分配的内存大于结构体的实际大小，那么大出来的那部分就是data的内容。\",\"实际使用时，一般这样用\",\"int dataBytes = 10; // 此处指定data的数据大小 struct Msg *p = (struct Msg *)malloc(sizeof(struct Msg) + dataBytes); // 动态分配 p->nLen = dataBytes; // 把长度赋值给nLen，以方便其它部分使用此结构体 \"]},\"117\":{\"h\":\"C99 使用不完整类型实现柔性数组\",\"t\":[\"在C99 中，结构中的最后一个元素允许是未知大小的数组，这就叫做柔性数组(flexible array)成员(也叫伸缩性数组成员)，但结构中的柔性数组成员前面必须至少一个其他成员。柔性数组成员允许结构中包含一个大小可变的数组。\",\"柔性数组成员只作为一个符号地址存在，而且必须是结构体的最后一个成员，sizeof 返回的这种结构大小不包括柔性数组的内存。柔性数组成员不仅可以用于字符数组，还可以是元素为其它类型的数组。\",\"包含柔性数组成员的结构用malloc ()函数进行内存的动态分配，并且分配的内存应该大于结构的大小，以适应柔性数组的预期大小。\",\"柔性数组的使用请看下面的例子：\",\"typedef struct test { int a; double b; char c[0]; }; \",\"有些编译器会报错无法编译可以改成：\",\"typedef struct test { int a; double b; char c[]; }; \",\"相关信息\",\"应当尽量使用标准形式，在非C99的场合，可以使用指针方法。\",\"需要说明的是：C89不支持这种东西，C99把它作为一种特例加入了标准。\",\"但是，C99所支持的是incomplete type，而不是zero array，形同int a[0];这种形式是非法的，C99 支持的形式是形同int a[];只不过有些编译器把int a[0];作为非标准扩展来支持，而且在C99 发布之前已经有了这种非标准扩展了，C99 发布之后，有些编译器把两者合而为一了。\"]},\"118\":{\"h\":\"达夫设备\"},\"119\":{\"h\":\"参考链接\",\"t\":[\"C语音冷门知识点：达夫机！switch还可以这么玩\"]},\"120\":{\"h\":\"代码实现\",\"t\":[\"void send( int * to, int * from, int count) { int n = (count + 7 ) / 8 ; switch (count % 8 ) { case 0 : do { * to ++ = * from ++ ; case 7 : * to ++ = * from ++ ; case 6 : * to ++ = * from ++ ; case 5 : * to ++ = * from ++ ; case 4 : * to ++ = * from ++ ; case 3 : * to ++ = * from ++ ; case 2 : * to ++ = * from ++ ; case 1 : * to ++ = * from ++ ; } while ( -- n > 0 ); } } \"]},\"121\":{\"h\":\"什么是达夫设备\",\"t\":[\"百度百科说法如下：\",\"相关信息\",\"在计算机科学领域，达夫设备（英文：Duff's device）是串行复制（serial copy）的一种优化实现，通过汇编语言编程时一常用方法，实现展开循环，进而提高执行效率。这一方法据信为当时供职于卢卡斯影业的汤姆·达夫于1983年11月发明，并可能是迄今为止利用C语言switch语句特性所作的最巧妙的实现。\",\"达夫设备是一个加速循环语句的C编码技巧。其 基本思想 是--减少循环测试的执行次数。\"]},\"122\":{\"h\":\"实现机制\",\"t\":[\"在达夫解决这个问题的时候，当时的C语言对switch语句的规范是比较松的，在switch控制语句内，条件标号（case）可以出现在任意子语句之前，充作其前缀。\",\"此外若未加入break语句，则在switch语句在根据条件判定，跳转到对应的标号，并在开始执行后，控制流会一直执行到switch嵌套语句的末尾。\",\"利用这种特性，这段代码可以从连续地址中将count个数据复制到存储器中，映射输出寄存器中。\",\"另一方面，C语言本身也对跳转到循环内部提供了支持，因而此处的switch/case语句便可跳转到循环内部。\"]},\"123\":{\"h\":\"执行流程\",\"t\":[\"程序执行到了switch的时候，就会根据n的值，直接跳转到 case n那里，再当它执行到while那里时，就会判断循环条件。若为真，则while循环开始，程序跳转到do那里开始执行循环；为假，则退出循环，即程序中止。（这个swicth语句就再也没有用了）\",\"我们再看以下代码，这里 count 个字节从 from 指向的数组复制到 to 指向的内存地址，是个内存映射的输出寄存器。它把 swtich 语句和复制 8 个字节的循环交织在一起, 从而解决了剩余字节的处理问题 (当 count % 8 ！= 0)。\",\"void send( int * to, int * from, int count) { int n = (count + 7 ) / 8 ; switch (count % 8 ) { case 0 : do { * to ++ = * from ++ ; case 7 : * to ++ = * from ++ ; case 6 : * to ++ = * from ++ ; case 5 : * to ++ = * from ++ ; case 4 : * to ++ = * from ++ ; case 3 : * to ++ = * from ++ ; case 2 : * to ++ = * from ++ ; case 1 : * to ++ = * from ++ ; } while ( -- n > 0 ); } } \",\"switch内的表达式计算被8除的余数。执行开始于while循环内的哪个位置由这个余数决定，直到最终循环退出（没有break）。Duff's Device这样就简单漂亮地解决了边界条件的问题。\"]},\"124\":{\"h\":\"MCU\"},\"125\":{\"h\":\"C/C++代码格式化\"},\"126\":{\"h\":\"设置方式\",\"t\":[\"打开 文件->首选项->设置, 搜索 C_Cpp.clang_format_style\",\"C_Cpp.clang_format_style\"]},\"127\":{\"h\":\"Linux 内核排版样式\",\"t\":[\"{ BasedOnStyle: LLVM, IndentWidth: 4, ColumnLimit: 0, UseTab: Never, SortIncludes: false, BreakBeforeBraces: Linux, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, AlignConsecutiveMacros: true } \"]},\"128\":{\"h\":\"Google排版方式\",\"t\":[\"{BasedOnStyle: Google,UseTab: Never, IndentWidth: 4, TabWidth: 4, SortIncludes: false, AlignConsecutiveMacros : true,ColumnLimit: 100} \"]},\"129\":{\"h\":\"VS Code\"},\"130\":{\"h\":\"VOFA+\"},\"131\":{\"h\":\"自定义协议引擎开发\"},\"132\":{\"h\":\"参考\",\"t\":[\"官方教程\"]},\"133\":{\"h\":\"具体实现\"},\"134\":{\"h\":\"agile 全家桶\"},\"135\":{\"h\":\"Agile Modbus 教程\"},\"136\":{\"h\":\"Agile Modbus 介绍及移植使用\"},\"137\":{\"h\":\"GD32\"},\"138\":{\"h\":\"STM32F407 RT-Thread 移植 GD32 以太网 SD卡注意事项\"},\"139\":{\"h\":\"以太网\",\"t\":[\"参考 GD 官方文档 STM32F4xx_to_GD32F4xx系列_V1.1.pdf\",\"ENET修改\",\"修改 stm32f4xx_hal_eth.c 中 static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth)\",\"static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth) { __IO uint32_t tmpreg1 = 0U; /* Set the Flush Transmit FIFO bit */ (heth->Instance)->DMAOMR |= ETH_DMAOMR_FTF; /* Wait until the write operation will be taken into account: at least four TX_CLK/RX_CLK clock cycles */ + while (((heth->Instance)->DMAOMR & ETH_DMAOMR_FTF) != RESET); tmpreg1 = (heth->Instance)->DMAOMR; ETH_Delay(ETH_REG_WRITE_DELAY); (heth->Instance)->DMAOMR = tmpreg1; } \"]},\"140\":{\"h\":\"SD卡\",\"t\":[\"调试发现使用的是 DMA 方式，数据对齐是 4 字节。SD卡初始化过程中先发 ACMD55，然后 CMD 51 命令读取 SCR 寄存器 8 个 字节时出现了异常。\",\"SDIO_FIFOCNT 寄存器为 0了，但是 SDIO_STAT 寄存器的值为 0x0020A400\",\"日志如下，CMD6 同样是接收长度，只不过长度为 64，CMD51长度为8\",\"SD异常日志\",\"SDIO状态寄存器\",\"处理该问题\",\"由于在 rthw_sdio_irq_process 中断处理函数中，在需要数据交互条件下，产生 DATAEND 中断时发送事件集。\",\"因此在 rthw_sdio_send_command 中可以屏蔽接收状态位的判断。\",\"sdio_irq\",\"sdio_send_command\"]},\"141\":{\"h\":\"About\"}},\"dirtCount\":0,\"index\":[[\"因此在\",{\"1\":{\"140\":1}}],[\"因而此处的switch\",{\"1\":{\"122\":1}}],[\"产生\",{\"1\":{\"140\":1}}],[\"处理该问题\",{\"1\":{\"140\":1}}],[\"同样是接收长度\",{\"1\":{\"140\":1}}],[\"同时交互演示\",{\"1\":{\"40\":1}}],[\"个\",{\"1\":{\"140\":1}}],[\"个字节的循环交织在一起\",{\"1\":{\"123\":1}}],[\"个字节从\",{\"1\":{\"123\":1}}],[\"个字符\",{\"1\":{\"102\":2}}],[\"寄存器的值为\",{\"1\":{\"140\":1}}],[\"寄存器为\",{\"1\":{\"140\":1}}],[\"寄存器\",{\"1\":{\"140\":1}}],[\"字节时出现了异常\",{\"1\":{\"140\":1}}],[\"字节\",{\"1\":{\"140\":1}}],[\"方式\",{\"1\":{\"140\":1}}],[\"修改\",{\"1\":{\"139\":1}}],[\"修改该头文件中的配置可以设置库的基本行为\",{\"1\":{\"99\":1}}],[\"具体实现\",{\"0\":{\"133\":1}}],[\"具体路径如下\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"89\":1}}],[\"官方文档\",{\"1\":{\"139\":1}}],[\"官方教程\",{\"1\":{\"132\":1}}],[\"官方固件打包工具\",{\"1\":{\"95\":1}}],[\"自定义协议引擎开发\",{\"0\":{\"131\":1}}],[\"自定义后端只需要实现\",{\"1\":{\"105\":1}}],[\"内核排版样式\",{\"0\":{\"127\":1}}],[\"内的连续操作\",{\"1\":{\"25\":1}}],[\"搜索\",{\"1\":{\"126\":1}}],[\"没有break\",{\"1\":{\"123\":1}}],[\"直到最终循环退出\",{\"1\":{\"123\":1}}],[\"直接跳转到\",{\"1\":{\"123\":1}}],[\"执行开始于while循环内的哪个位置由这个余数决定\",{\"1\":{\"123\":1}}],[\"执行流程\",{\"0\":{\"123\":1}}],[\"语句和复制\",{\"1\":{\"123\":1}}],[\"指向的内存地址\",{\"1\":{\"123\":1}}],[\"指向的数组复制到\",{\"1\":{\"123\":1}}],[\"程序跳转到do那里开始执行循环\",{\"1\":{\"123\":1}}],[\"程序执行到了switch的时候\",{\"1\":{\"123\":1}}],[\"若为真\",{\"1\":{\"123\":1}}],[\"再当它执行到while那里时\",{\"1\":{\"123\":1}}],[\"再释放结构体\",{\"1\":{\"115\":1}}],[\"就会判断循环条件\",{\"1\":{\"123\":1}}],[\"就会根据n的值\",{\"1\":{\"123\":1}}],[\"就必须分配结构体一次\",{\"1\":{\"115\":1}}],[\"另一方面\",{\"1\":{\"122\":1}}],[\"映射输出寄存器中\",{\"1\":{\"122\":1}}],[\"利用这种特性\",{\"1\":{\"122\":1}}],[\"控制流会一直执行到switch嵌套语句的末尾\",{\"1\":{\"122\":1}}],[\"跳转到对应的标号\",{\"1\":{\"122\":1}}],[\"则退出循环\",{\"1\":{\"123\":1}}],[\"则while循环开始\",{\"1\":{\"123\":1}}],[\"则在switch语句在根据条件判定\",{\"1\":{\"122\":1}}],[\"则不进行判断\",{\"1\":{\"108\":1}}],[\"此外若未加入break语句\",{\"1\":{\"122\":1}}],[\"此处指定data的数据大小\",{\"1\":{\"116\":1}}],[\"充作其前缀\",{\"1\":{\"122\":1}}],[\"充分使用\",{\"1\":{\"26\":1,\"60\":1}}],[\"条件标号\",{\"1\":{\"122\":1}}],[\"当\",{\"1\":{\"123\":1}}],[\"当时的c语言对switch语句的规范是比较松的\",{\"1\":{\"122\":1}}],[\"当进行\",{\"1\":{\"90\":1}}],[\"减少循环测试的执行次数\",{\"1\":{\"121\":1}}],[\"减少内存的碎片化\",{\"1\":{\"115\":1}}],[\"进而提高执行效率\",{\"1\":{\"121\":1}}],[\"通过汇编语言编程时一常用方法\",{\"1\":{\"121\":1}}],[\"通过该属性可获取连续操作次数\",{\"1\":{\"25\":1}}],[\"英文\",{\"1\":{\"121\":1}}],[\"百度百科说法如下\",{\"1\":{\"121\":1}}],[\"什么是达夫设备\",{\"0\":{\"121\":1}}],[\"达夫于1983年11月发明\",{\"1\":{\"121\":1}}],[\"达夫机\",{\"1\":{\"119\":1}}],[\"达夫设备是一个加速循环语句的c编码技巧\",{\"1\":{\"121\":1}}],[\"达夫设备\",{\"0\":{\"118\":1},\"1\":{\"121\":1}}],[\"有些编译器把两者合而为一了\",{\"1\":{\"117\":1}}],[\"有些编译器会报错无法编译可以改成\",{\"1\":{\"117\":1}}],[\"发布之后\",{\"1\":{\"117\":1}}],[\"发布之前已经有了这种非标准扩展了\",{\"1\":{\"117\":1}}],[\"发送大小修改为\",{\"1\":{\"40\":1}}],[\"作为非标准扩展来支持\",{\"1\":{\"117\":1}}],[\"只不过长度为\",{\"1\":{\"140\":1}}],[\"只不过有些编译器把int\",{\"1\":{\"117\":1}}],[\"只强制选中到sal层\",{\"1\":{\"91\":1}}],[\"形同int\",{\"1\":{\"117\":1}}],[\"但是\",{\"1\":{\"117\":1,\"140\":1}}],[\"但结构中的柔性数组成员前面必须至少一个其他成员\",{\"1\":{\"117\":1}}],[\"应当尽量使用标准形式\",{\"1\":{\"117\":1}}],[\"函数进行内存的动态分配\",{\"1\":{\"117\":1}}],[\"包含柔性数组成员的结构用malloc\",{\"1\":{\"117\":1}}],[\"包含柔性数组成员的结构要用malloc进行动态内存分配\",{\"1\":{\"115\":1}}],[\"还可以是元素为其它类型的数组\",{\"1\":{\"117\":1}}],[\"还不能颠倒次序\",{\"1\":{\"115\":1}}],[\"返回的这种结构大小不包括柔性数组的内存\",{\"1\":{\"117\":1}}],[\"也叫伸缩性数组成员\",{\"1\":{\"117\":1}}],[\"也会被触发\",{\"1\":{\"25\":1}}],[\"成员\",{\"1\":{\"117\":1}}],[\"结构中的最后一个元素允许是未知大小的数组\",{\"1\":{\"117\":1}}],[\"把长度赋值给nlen\",{\"1\":{\"116\":1}}],[\"动态分配\",{\"1\":{\"116\":1}}],[\"动态设置参数\",{\"0\":{\"47\":1}}],[\"实际使用时\",{\"1\":{\"116\":1}}],[\"实现展开循环\",{\"1\":{\"121\":1}}],[\"实现机制\",{\"0\":{\"115\":1,\"122\":1}}],[\"实现自定义的后端只需适配几个操作接口\",{\"1\":{\"95\":1}}],[\"实现时\",{\"1\":{\"41\":1}}],[\"实现后端的\",{\"1\":{\"41\":1}}],[\"实现一个新的后端并接入\",{\"1\":{\"41\":1}}],[\"实现的\",{\"1\":{\"25\":1,\"59\":1}}],[\"它把\",{\"1\":{\"123\":1}}],[\"它的地址紧跟着nlen后的地址\",{\"1\":{\"116\":1}}],[\"它会被加入到\",{\"1\":{\"90\":1}}],[\"我们再看以下代码\",{\"1\":{\"123\":1}}],[\"我们要知道的一点就是\",{\"1\":{\"116\":1}}],[\"我开源的项目\",{\"0\":{\"4\":1}}],[\"必须放在最后\",{\"1\":{\"116\":1}}],[\"代码实现\",{\"0\":{\"116\":1,\"120\":1}}],[\"代码简洁易懂\",{\"1\":{\"26\":1,\"60\":1}}],[\"分配一段连续的的内存\",{\"1\":{\"115\":1}}],[\"其\",{\"1\":{\"121\":1}}],[\"其它成员\",{\"1\":{\"116\":2}}],[\"其实就是\",{\"1\":{\"115\":1}}],[\"其他命令均会调用该接口\",{\"1\":{\"41\":1}}],[\"其他引起阻塞的\",{\"1\":{\"41\":1}}],[\"得先释放结构体内的指针\",{\"1\":{\"115\":1}}],[\"释放时也是一样\",{\"1\":{\"115\":1}}],[\"反过来\",{\"1\":{\"115\":1}}],[\"反初始化后端\",{\"1\":{\"105\":1}}],[\"而且在c99\",{\"1\":{\"117\":1}}],[\"而且必须是结构体的最后一个成员\",{\"1\":{\"117\":1}}],[\"而不是zero\",{\"1\":{\"117\":1}}],[\"而如果使用数组\",{\"1\":{\"115\":1}}],[\"而此时分配的内存已经与结构体的内存不连续了\",{\"1\":{\"115\":1}}],[\"所以要分别管理即申请和释放\",{\"1\":{\"115\":1}}],[\"然后\",{\"1\":{\"140\":1}}],[\"然后再分配结构体内的指针一次\",{\"1\":{\"115\":1}}],[\"然后让\",{\"1\":{\"30\":1,\"64\":1,\"89\":1}}],[\"你在分配内存缓冲区时\",{\"1\":{\"115\":1}}],[\"那么大出来的那部分就是data的内容\",{\"1\":{\"116\":1}}],[\"那么只需要一次就可以全部分配出来\",{\"1\":{\"115\":1}}],[\"那么\",{\"1\":{\"115\":1}}],[\"主要是为了方便管理内存缓冲区\",{\"1\":{\"115\":1}}],[\"主页\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"92\":1,\"111\":1}}],[\"相关信息\",{\"1\":{\"115\":1,\"117\":1,\"121\":1}}],[\"以太网\",{\"0\":{\"138\":1,\"139\":1}}],[\"以方便其它部分使用此结构体\",{\"1\":{\"116\":1}}],[\"以适应柔性数组的预期大小\",{\"1\":{\"115\":1,\"117\":1}}],[\"以实现简单的对象获取操作\",{\"1\":{\"50\":1}}],[\"这里\",{\"1\":{\"123\":1}}],[\"这个swicth语句就再也没有用了\",{\"1\":{\"123\":1}}],[\"这个数组是没有元素的\",{\"1\":{\"116\":1}}],[\"这段代码可以从连续地址中将count个数据复制到存储器中\",{\"1\":{\"122\":1}}],[\"这一方法据信为当时供职于卢卡斯影业的汤姆\",{\"1\":{\"121\":1}}],[\"这种形式是非法的\",{\"1\":{\"117\":1}}],[\"这种用法在c99中叫做\",{\"1\":{\"115\":1}}],[\"这就叫做柔性数组\",{\"1\":{\"117\":1}}],[\"这么写是非法的\",{\"1\":{\"115\":1}}],[\"这些agile\",{\"1\":{\"91\":1}}],[\"参考\",{\"0\":{\"132\":1},\"1\":{\"139\":1}}],[\"参考链接\",{\"0\":{\"114\":1,\"119\":1}}],[\"参数\",{\"1\":{\"105\":5,\"109\":2}}],[\"柔性数组的使用请看下面的例子\",{\"1\":{\"117\":1}}],[\"柔性数组成员不仅可以用于字符数组\",{\"1\":{\"117\":1}}],[\"柔性数组成员只作为一个符号地址存在\",{\"1\":{\"117\":1}}],[\"柔性数组成员允许结构中包含一个大小可变的数组\",{\"1\":{\"117\":1}}],[\"柔性数组成员前面必须至少有一个其它类型成员\",{\"1\":{\"115\":1}}],[\"柔性数组\",{\"0\":{\"113\":1},\"1\":{\"115\":1}}],[\"喝杯咖啡\",{\"1\":{\"110\":1}}],[\"解决了你的问题\",{\"1\":{\"110\":1}}],[\"解析器\",{\"1\":{\"50\":1,\"54\":1}}],[\"7\",{\"1\":{\"109\":1,\"120\":2,\"123\":2}}],[\"64\",{\"1\":{\"140\":1}}],[\"6\",{\"1\":{\"109\":1,\"120\":1,\"123\":1}}],[\"错误码枚举\",{\"1\":{\"109\":1}}],[\"步骤枚举\",{\"1\":{\"109\":1}}],[\"每解析一包数据会调用进度钩子函数\",{\"1\":{\"109\":1}}],[\"每一步执行前会调用步骤钩子函数\",{\"1\":{\"109\":1}}],[\"异常时会调用异常钩子函数\",{\"1\":{\"109\":1}}],[\"异步\",{\"1\":{\"46\":2}}],[\"升级完成后是否需要擦除源操作对象\",{\"1\":{\"109\":1}}],[\"描述\",{\"1\":{\"109\":2}}],[\"校验固件和搬运时进行判断\",{\"1\":{\"108\":1}}],[\"日志如下\",{\"1\":{\"140\":1}}],[\"日志中会输出为\",{\"1\":{\"108\":1}}],[\"日志打印中会使用\",{\"1\":{\"108\":1}}],[\"日志输出调用的接口\",{\"1\":{\"101\":1}}],[\"快速开始\",{\"0\":{\"108\":1}}],[\"快速上手\",{\"0\":{\"45\":1}}],[\"擦除后端数据\",{\"1\":{\"105\":1}}],[\"向后端写入数据\",{\"1\":{\"105\":1}}],[\"向后端输出数据接口\",{\"1\":{\"41\":1}}],[\"为假\",{\"1\":{\"123\":1}}],[\"为负数时表示向尾部写入\",{\"1\":{\"105\":1}}],[\"为负数时表示从尾部读入\",{\"1\":{\"105\":1}}],[\"为了消除干扰\",{\"1\":{\"25\":1}}],[\"片内\",{\"1\":{\"105\":1}}],[\"压缩算法\",{\"0\":{\"103\":1}}],[\"压缩支持如下\",{\"1\":{\"95\":1}}],[\"key\",{\"1\":{\"102\":1}}],[\"密钥\",{\"1\":{\"102\":1}}],[\"调试发现使用的是\",{\"1\":{\"140\":1}}],[\"调试功能\",{\"0\":{\"101\":1}}],[\"调用相应\",{\"1\":{\"54\":1}}],[\"调用\",{\"1\":{\"41\":1}}],[\"固件解析按步骤执行\",{\"1\":{\"109\":1}}],[\"固件升级\",{\"1\":{\"109\":1}}],[\"固件信息在尾部\",{\"1\":{\"109\":1}}],[\"固件信息在头部1\",{\"1\":{\"109\":1}}],[\"固件信息\",{\"1\":{\"109\":1}}],[\"固件校验\",{\"1\":{\"109\":1}}],[\"固件版本一致不进行升级\",{\"1\":{\"100\":1}}],[\"固件打包工具\",{\"1\":{\"96\":1}}],[\"基本思想\",{\"1\":{\"121\":1}}],[\"基本配置\",{\"0\":{\"100\":1}}],[\"基于rt\",{\"1\":{\"44\":1}}],[\"复制它并重命名为\",{\"1\":{\"99\":1}}],[\"禁用未使用的模块和特性\",{\"1\":{\"99\":1}}],[\"配置文件\",{\"0\":{\"99\":1}}],[\"配置为一个不存在的设备\",{\"1\":{\"36\":1}}],[\"移植操作完成后\",{\"1\":{\"108\":1}}],[\"移植\",{\"0\":{\"98\":1,\"138\":1}}],[\"移植文件\",{\"1\":{\"96\":1}}],[\"移植简单\",{\"1\":{\"95\":1}}],[\"已适配的后端\",{\"1\":{\"96\":1}}],[\"已有的数据存放到数据区后立马返回\",{\"1\":{\"41\":1}}],[\"全过程日志输出\",{\"1\":{\"95\":1}}],[\"全家桶\",{\"0\":{\"5\":1,\"9\":1,\"134\":1}}],[\"几行代码即可实现固件升级\",{\"1\":{\"95\":1,\"108\":1}}],[\"及\",{\"1\":{\"95\":1,\"105\":1}}],[\"原生适配\",{\"1\":{\"95\":1,\"105\":1}}],[\"原作者主页\",{\"1\":{\"57\":1}}],[\"加密算法\",{\"0\":{\"102\":1}}],[\"加密\",{\"1\":{\"95\":1}}],[\"开启则比较固件版本\",{\"1\":{\"100\":1}}],[\"开发\",{\"1\":{\"95\":1}}],[\"开源爱好者\",{\"1\":{\"1\":1}}],[\"图形化工具及命令行工具\",{\"1\":{\"95\":1}}],[\"适配\",{\"1\":{\"95\":1}}],[\"适用于单片机中存储空间有限的环境\",{\"1\":{\"50\":1}}],[\"上的示例查看\",{\"1\":{\"94\":1}}],[\"上的示例\",{\"1\":{\"94\":1}}],[\"用于快速构建\",{\"1\":{\"94\":1}}],[\"工程中进行编译\",{\"1\":{\"90\":1}}],[\"工具教程\",{\"0\":{\"20\":1}}],[\"后\",{\"1\":{\"90\":1}}],[\"后端操作接口私有数据\",{\"1\":{\"108\":1}}],[\"后端操作接口\",{\"1\":{\"108\":1}}],[\"后端私有数据\",{\"1\":{\"108\":1}}],[\"后端能操作空间大小\",{\"1\":{\"108\":1}}],[\"后端名称\",{\"1\":{\"108\":1}}],[\"后端实现\",{\"1\":{\"105\":1}}],[\"后端实现极其方便\",{\"1\":{\"36\":1}}],[\"后端适配\",{\"0\":{\"105\":1}}],[\"后端收到数据时调用\",{\"1\":{\"41\":1}}],[\"后端接口结构体\",{\"1\":{\"41\":1}}],[\"后端例子中展示了如何屏蔽输入输出\",{\"1\":{\"41\":1}}],[\"后端插件\",{\"1\":{\"40\":2}}],[\"后端\",{\"1\":{\"36\":2,\"104\":2}}],[\"并在开始执行后\",{\"1\":{\"122\":1}}],[\"并在工程中包含路径即可\",{\"1\":{\"99\":1}}],[\"并可能是迄今为止利用c语言switch语句特性所作的最巧妙的实现\",{\"1\":{\"121\":1}}],[\"并且分配的内存应该大于结构的大小\",{\"1\":{\"115\":1,\"117\":1}}],[\"并将生成的句柄传递给\",{\"1\":{\"105\":1}}],[\"并作为其插件使用\",{\"1\":{\"89\":1}}],[\"并创建线程异步发送\",{\"1\":{\"41\":1}}],[\"大于v1\",{\"1\":{\"89\":1}}],[\"请访问v1\",{\"1\":{\"85\":1}}],[\"zanshang\",{\"1\":{\"82\":1,\"110\":1}}],[\"zserge\",{\"1\":{\"57\":1}}],[\"|=\",{\"1\":{\"139\":1}}],[\"|\",{\"1\":{\"78\":1}}],[\"8\",{\"1\":{\"78\":5,\"120\":2,\"123\":4,\"140\":1}}],[\"=\",{\"1\":{\"78\":1,\"79\":1,\"108\":8,\"109\":9,\"116\":3,\"120\":9,\"123\":10,\"139\":4}}],[\"=0\",{\"1\":{\"78\":1}}],[\"==\",{\"1\":{\"75\":4}}],[\"xxx\",{\"1\":{\"75\":2}}],[\"++\",{\"1\":{\"120\":16,\"123\":16}}],[\"+\",{\"1\":{\"75\":2,\"78\":9,\"116\":1,\"120\":1,\"123\":1,\"139\":1}}],[\"judge\",{\"1\":{\"75\":1,\"78\":1}}],[\"just\",{\"1\":{\"75\":1}}],[\"json\",{\"1\":{\"50\":1,\"54\":2}}],[\"jsmntok\",{\"1\":{\"54\":1}}],[\"jsmn\",{\"0\":{\"49\":1,\"54\":1},\"1\":{\"50\":3,\"51\":3,\"52\":1,\"54\":5,\"57\":3}}],[\"your\",{\"1\":{\"82\":1}}],[\"you\",{\"1\":{\"71\":1,\"75\":1,\"78\":5,\"81\":1,\"82\":1}}],[\"ymodem\",{\"1\":{\"40\":1}}],[\"过程中需要强制停止\",{\"1\":{\"65\":1}}],[\"编译时\",{\"1\":{\"90\":1}}],[\"编译\",{\"1\":{\"55\":1}}],[\"判断\",{\"1\":{\"54\":1}}],[\"转换\",{\"1\":{\"54\":1}}],[\"或char\",{\"1\":{\"116\":1}}],[\"或\",{\"1\":{\"54\":1,\"115\":1}}],[\"或者使用\",{\"1\":{\"30\":1,\"64\":1,\"89\":1}}],[\"值返回的是字符串\",{\"1\":{\"54\":1}}],[\"对象\",{\"1\":{\"54\":1}}],[\"对后端进行设置接口\",{\"1\":{\"41\":1}}],[\"irq\",{\"1\":{\"140\":2}}],[\"iec\",{\"1\":{\"115\":1}}],[\"iv\",{\"1\":{\"102\":1}}],[\"iot\",{\"1\":{\"89\":1}}],[\"io\",{\"1\":{\"78\":4,\"139\":1}}],[\"if\",{\"1\":{\"75\":7,\"78\":1,\"79\":1,\"81\":1,\"82\":1}}],[\"idle\",{\"1\":{\"75\":2}}],[\"ideas\",{\"1\":{\"75\":1}}],[\"implementation\",{\"1\":{\"79\":3}}],[\"implemented\",{\"1\":{\"78\":1,\"80\":2}}],[\"implement\",{\"1\":{\"75\":2,\"79\":1}}],[\"its\",{\"1\":{\"78\":1}}],[\"it\",{\"1\":{\"71\":3,\"75\":9,\"78\":6,\"79\":2,\"81\":2}}],[\"iteminit\",{\"1\":{\"54\":1}}],[\"is\",{\"1\":{\"70\":1,\"71\":3,\"75\":17,\"78\":9,\"79\":8,\"81\":2,\"109\":4}}],[\"invite\",{\"1\":{\"82\":1}}],[\"involve\",{\"1\":{\"71\":2}}],[\"inside\",{\"1\":{\"79\":1}}],[\"input\",{\"1\":{\"78\":1,\"79\":10}}],[\"inputs\",{\"1\":{\"78\":1}}],[\"indentcaselabels\",{\"1\":{\"127\":1}}],[\"indentwidth\",{\"1\":{\"127\":1,\"128\":1}}],[\"index\",{\"1\":{\"78\":11,\"79\":3}}],[\"indication\",{\"1\":{\"75\":2}}],[\"information\",{\"0\":{\"83\":1},\"1\":{\"78\":1}}],[\"info\",{\"1\":{\"78\":6,\"79\":6,\"109\":3}}],[\"in\",{\"1\":{\"70\":1,\"75\":5,\"78\":9,\"79\":1,\"80\":2}}],[\"into\",{\"1\":{\"78\":1,\"139\":1}}],[\"internet\",{\"1\":{\"89\":1}}],[\"interrupt\",{\"1\":{\"75\":3}}],[\"interface\",{\"0\":{\"78\":1,\"79\":1},\"1\":{\"71\":1,\"75\":2,\"78\":1,\"79\":9}}],[\"interval\",{\"1\":{\"31\":1}}],[\"introduction\",{\"0\":{\"70\":1},\"1\":{\"78\":2,\"79\":3}}],[\"int\",{\"1\":{\"41\":5,\"78\":5,\"79\":16,\"105\":11,\"108\":2,\"109\":5,\"116\":2,\"117\":2,\"120\":4,\"123\":4}}],[\"initializing\",{\"1\":{\"75\":1}}],[\"initializes\",{\"1\":{\"75\":2}}],[\"initialize\",{\"1\":{\"71\":1}}],[\"init\",{\"1\":{\"31\":3,\"45\":1,\"46\":1,\"54\":1,\"65\":3,\"75\":6,\"105\":2,\"109\":1}}],[\"include\",{\"1\":{\"45\":1,\"79\":2,\"108\":1}}],[\"inc\",{\"1\":{\"27\":1,\"37\":1,\"61\":1,\"72\":1,\"86\":1,\"96\":1}}],[\"数据对齐是\",{\"1\":{\"140\":1}}],[\"数据解析到\",{\"1\":{\"54\":1}}],[\"数组中\",{\"1\":{\"54\":1}}],[\"将\",{\"1\":{\"54\":1}}],[\"库开发\",{\"1\":{\"53\":1}}],[\"无依赖\",{\"1\":{\"53\":1}}],[\"源操作对象\",{\"1\":{\"109\":1}}],[\"源码目录\",{\"1\":{\"51\":2}}],[\"源代码目录\",{\"1\":{\"61\":1,\"86\":1}}],[\"源代码\",{\"1\":{\"27\":1,\"37\":1,\"96\":1}}],[\"例程目录\",{\"1\":{\"51\":1}}],[\"例子目录\",{\"1\":{\"61\":1}}],[\"例子\",{\"1\":{\"27\":1,\"96\":1}}],[\"增加了一些\",{\"1\":{\"50\":1}}],[\"在需要数据交互条件下\",{\"1\":{\"140\":1}}],[\"在switch控制语句内\",{\"1\":{\"122\":1}}],[\"在达夫解决这个问题的时候\",{\"1\":{\"122\":1}}],[\"在计算机科学领域\",{\"1\":{\"121\":1}}],[\"在非c99的场合\",{\"1\":{\"117\":1}}],[\"在c99\",{\"1\":{\"117\":1}}],[\"在iso\",{\"1\":{\"115\":1}}],[\"在结构体最后加\",{\"1\":{\"115\":1}}],[\"在编译时调整内存缓冲区的大小等等\",{\"1\":{\"99\":1}}],[\"在打开\",{\"1\":{\"90\":1}}],[\"在电脑上运行\",{\"1\":{\"55\":1}}],[\"在\",{\"1\":{\"50\":1,\"106\":1}}],[\"在按下期间会计算对象的持续按下时间\",{\"1\":{\"25\":1}}],[\"标准的\",{\"1\":{\"50\":1}}],[\"简单的可以作为\",{\"1\":{\"50\":1}}],[\"单独操作对象\",{\"1\":{\"65\":1}}],[\"单文件\",{\"1\":{\"50\":1}}],[\"单向链表节点\",{\"1\":{\"41\":1}}],[\"携带方便\",{\"1\":{\"50\":1}}],[\"是个内存映射的输出寄存器\",{\"1\":{\"123\":1}}],[\"是\",{\"1\":{\"121\":1}}],[\"是串行复制\",{\"1\":{\"121\":1}}],[\"是一个超轻巧\",{\"1\":{\"50\":1}}],[\"是基于\",{\"1\":{\"25\":1,\"36\":1,\"59\":1}}],[\"强制重启服务器\",{\"1\":{\"46\":1}}],[\"强制关闭所有客户端连接\",{\"1\":{\"46\":1}}],[\"qr\",{\"1\":{\"82\":1}}],[\"quicklz\",{\"1\":{\"95\":1,\"103\":2,\"106\":1}}],[\"quit\",{\"1\":{\"46\":1,\"47\":1}}],[\"question\",{\"1\":{\"78\":1}}],[\"qq\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"83\":1,\"92\":1,\"111\":1}}],[\"获取自己想要的\",{\"1\":{\"54\":1}}],[\"获取服务器监听端口\",{\"1\":{\"46\":1}}],[\"获取客户端欢迎词\",{\"1\":{\"46\":1}}],[\"获取客户端密码\",{\"1\":{\"46\":1}}],[\"获取客户端用户名\",{\"1\":{\"46\":1}}],[\"获取最大客户端数量\",{\"1\":{\"46\":1}}],[\"n那里\",{\"1\":{\"123\":1}}],[\"n\",{\"1\":{\"120\":2,\"123\":2}}],[\"nlen\",{\"1\":{\"116\":1}}],[\"nb\",{\"1\":{\"78\":7,\"79\":4}}],[\"normal\",{\"1\":{\"78\":1}}],[\"note\",{\"1\":{\"78\":1}}],[\"not\",{\"1\":{\"71\":2,\"75\":5,\"78\":9}}],[\"never\",{\"1\":{\"127\":1,\"128\":1}}],[\"negative\",{\"1\":{\"78\":1}}],[\"new\",{\"1\":{\"78\":1}}],[\"need\",{\"1\":{\"71\":1,\"75\":2,\"78\":9,\"79\":1,\"81\":1}}],[\"needs\",{\"1\":{\"70\":1,\"75\":1,\"78\":6,\"81\":1}}],[\"network\",{\"1\":{\"71\":1}}],[\"null\",{\"1\":{\"54\":1,\"78\":1,\"79\":4,\"108\":1}}],[\"number\",{\"1\":{\"78\":3,\"79\":5}}],[\"num\",{\"1\":{\"46\":2}}],[\"name\",{\"1\":{\"36\":1,\"40\":4,\"72\":1,\"108\":4}}],[\"ftf\",{\"1\":{\"139\":2}}],[\"ftp\",{\"0\":{\"43\":1},\"1\":{\"45\":2,\"46\":13,\"47\":2,\"48\":1}}],[\"flush\",{\"1\":{\"139\":1}}],[\"flushtransmitfifo\",{\"1\":{\"139\":2}}],[\"flexible\",{\"1\":{\"117\":1}}],[\"flash\",{\"1\":{\"105\":2}}],[\"flag\",{\"1\":{\"75\":2}}],[\"fw\",{\"1\":{\"109\":3}}],[\"fast\",{\"1\":{\"106\":1}}],[\"fastlz\",{\"1\":{\"95\":1,\"103\":2,\"106\":1}}],[\"false\",{\"1\":{\"127\":3,\"128\":1}}],[\"fal\",{\"1\":{\"95\":1,\"104\":2,\"105\":1,\"106\":1}}],[\"fc\",{\"1\":{\"78\":10}}],[\"frame\",{\"1\":{\"75\":1,\"78\":11,\"80\":1}}],[\"from\",{\"1\":{\"75\":1,\"78\":4,\"120\":9,\"123\":10}}],[\"function\",{\"1\":{\"75\":11,\"78\":14,\"79\":7,\"80\":2}}],[\"functions\",{\"1\":{\"75\":1}}],[\"full\",{\"1\":{\"75\":1}}],[\"features\",{\"0\":{\"71\":1}}],[\"four\",{\"1\":{\"139\":1}}],[\"following\",{\"1\":{\"75\":1}}],[\"folder\",{\"1\":{\"70\":1,\"80\":1}}],[\"for\",{\"1\":{\"73\":1,\"75\":6,\"78\":1,\"79\":1,\"82\":1,\"89\":1,\"106\":1}}],[\"forms\",{\"1\":{\"78\":1}}],[\"format\",{\"1\":{\"71\":1,\"81\":1,\"126\":2}}],[\"form\",{\"1\":{\"71\":1}}],[\"force\",{\"1\":{\"46\":2,\"47\":2,\"78\":1}}],[\"finish\",{\"1\":{\"109\":1}}],[\"fills\",{\"1\":{\"78\":1}}],[\"files\",{\"1\":{\"80\":1}}],[\"file\",{\"1\":{\"40\":1,\"72\":1,\"73\":1,\"80\":1,\"81\":1,\"95\":1,\"104\":2,\"105\":1,\"106\":1,\"108\":3}}],[\"field\",{\"1\":{\"78\":3,\"79\":2}}],[\"first\",{\"1\":{\"75\":1}}],[\"firmware\",{\"1\":{\"70\":2,\"78\":1,\"80\":2}}],[\"fifocnt\",{\"1\":{\"140\":1}}],[\"fifo\",{\"1\":{\"40\":2,\"139\":1}}],[\"figures\",{\"1\":{\"27\":1,\"37\":1,\"72\":1,\"96\":1}}],[\"唤醒接收线程\",{\"1\":{\"41\":1}}],[\"well\",{\"1\":{\"82\":1}}],[\"welcome\",{\"1\":{\"46\":2}}],[\"wsl\",{\"1\":{\"80\":1}}],[\"written\",{\"1\":{\"78\":5}}],[\"write\",{\"1\":{\"78\":7,\"105\":2,\"139\":2}}],[\"will\",{\"1\":{\"75\":3,\"78\":4,\"81\":1,\"139\":1}}],[\"without\",{\"1\":{\"81\":1}}],[\"within\",{\"1\":{\"79\":1}}],[\"with\",{\"1\":{\"71\":1,\"73\":1}}],[\"while\",{\"1\":{\"120\":1,\"123\":1,\"139\":1}}],[\"which\",{\"1\":{\"75\":1,\"78\":3,\"79\":1,\"80\":1}}],[\"when\",{\"1\":{\"75\":2,\"78\":2}}],[\"whether\",{\"1\":{\"75\":1,\"78\":1}}],[\"whole\",{\"1\":{\"25\":1,\"40\":1}}],[\"waiting\",{\"1\":{\"75\":3,\"78\":1}}],[\"wait\",{\"1\":{\"75\":1,\"139\":1}}],[\"wakeup\",{\"1\":{\"41\":1}}],[\"注册后端\",{\"1\":{\"41\":1}}],[\"注意事项\",{\"0\":{\"91\":1}}],[\"注意\",{\"1\":{\"25\":1,\"36\":1}}],[\"命令读取\",{\"1\":{\"140\":1}}],[\"命令\",{\"1\":{\"41\":1}}],[\"命令更新包到\",{\"1\":{\"30\":1,\"64\":1,\"89\":1}}],[\"除\",{\"1\":{\"41\":1}}],[\"除了保护资源而使用的互斥锁外\",{\"1\":{\"41\":1}}],[\"该软件包作为agile\",{\"1\":{\"90\":1}}],[\"该接口用作控制后端\",{\"1\":{\"41\":1}}],[\"该操作也可在启动运行前执行\",{\"1\":{\"65\":1}}],[\"该操作也可在运行过程中执行\",{\"1\":{\"31\":1}}],[\"该操作可以修改多击操作的响应速度\",{\"1\":{\"31\":1}}],[\"不妨扫描上面二维码请我\",{\"1\":{\"110\":1}}],[\"不需要自行移植配置文件\",{\"1\":{\"106\":1}}],[\"不需要可不实现\",{\"1\":{\"105\":3}}],[\"不涉及任何硬件接口\",{\"1\":{\"95\":1}}],[\"不建议调用\",{\"1\":{\"41\":1}}],[\"不能调用任何可能导致线程挂起的\",{\"1\":{\"41\":1}}],[\"定义后端变量\",{\"1\":{\"41\":1}}],[\"<agile\",{\"1\":{\"108\":1}}],[\"<<\",{\"1\":{\"78\":5}}],[\"<0\",{\"1\":{\"78\":1}}],[\"<\",{\"1\":{\"41\":4,\"79\":17}}],[\"v1\",{\"1\":{\"139\":1}}],[\"vofa+\",{\"0\":{\"130\":1}}],[\"void\",{\"1\":{\"41\":2,\"78\":2,\"79\":2,\"108\":3,\"109\":6,\"120\":1,\"123\":1,\"139\":2}}],[\"vs\",{\"0\":{\"129\":1}}],[\"verify\",{\"1\":{\"109\":2}}],[\"version\",{\"1\":{\"40\":1,\"89\":2,\"100\":1,\"106\":1}}],[\"variable\",{\"1\":{\"79\":1}}],[\"value\",{\"1\":{\"75\":1,\"78\":7}}],[\"via\",{\"1\":{\"75\":1}}],[\"view\",{\"1\":{\"74\":1}}],[\"新的后端接入\",{\"0\":{\"41\":1}}],[\"传输文件\",{\"1\":{\"40\":1}}],[\"和char\",{\"1\":{\"114\":1}}],[\"和\",{\"1\":{\"40\":1,\"41\":1,\"47\":1,\"105\":1}}],[\"正点原子探索者\",{\"1\":{\"40\":1}}],[\"演示使用开发板\",{\"1\":{\"40\":1}}],[\"多后端演示\",{\"1\":{\"40\":1}}],[\"才有该选项\",{\"1\":{\"40\":1}}],[\"串口\",{\"1\":{\"40\":1}}],[\"串口设备名\",{\"1\":{\"40\":1}}],[\"串口后端\",{\"1\":{\"36\":1}}],[\"使能后端\",{\"0\":{\"104\":1}}],[\"使能后会选中\",{\"1\":{\"40\":2}}],[\"使能日志输出\",{\"1\":{\"101\":1}}],[\"使能版本号比较\",{\"1\":{\"100\":1}}],[\"使能\",{\"1\":{\"40\":2,\"102\":1,\"103\":2,\"104\":2}}],[\"使能串口例程\",{\"1\":{\"40\":1}}],[\"使用不完整类型实现柔性数组\",{\"0\":{\"117\":1}}],[\"使用指针\",{\"1\":{\"115\":1}}],[\"使用数组\",{\"1\":{\"115\":1}}],[\"使用简单\",{\"1\":{\"95\":1}}],[\"使用纯\",{\"1\":{\"95\":1}}],[\"使用以太网设备请使能以太网设备和lwip\",{\"1\":{\"91\":1}}],[\"使用标准\",{\"1\":{\"53\":1}}],[\"使用到\",{\"1\":{\"36\":2}}],[\"使用示例在\",{\"1\":{\"32\":1,\"55\":1,\"66\":1}}],[\"使用\",{\"0\":{\"31\":1,\"40\":1,\"54\":1,\"65\":1,\"90\":1,\"107\":1},\"1\":{\"30\":1,\"33\":1,\"40\":2,\"47\":1,\"54\":2,\"55\":1,\"56\":1,\"64\":1,\"65\":1,\"67\":1,\"89\":1}}],[\"线程堆栈大小\",{\"1\":{\"40\":1}}],[\"线程优先级\",{\"1\":{\"40\":1}}],[\"线程安全\",{\"1\":{\"26\":1,\"60\":1}}],[\"版本\",{\"1\":{\"40\":2}}],[\"9899\",{\"1\":{\"115\":1}}],[\"9\",{\"1\":{\"40\":1}}],[\"must\",{\"1\":{\"75\":5,\"78\":1}}],[\"multiple\",{\"1\":{\"71\":2,\"78\":2}}],[\"ms\",{\"1\":{\"75\":1}}],[\"msg\",{\"1\":{\"46\":2,\"75\":8,\"78\":2,\"116\":4}}],[\"me\",{\"1\":{\"82\":1}}],[\"meaning\",{\"1\":{\"78\":1}}],[\"memory\",{\"1\":{\"75\":2}}],[\"message\",{\"1\":{\"75\":5}}],[\"meta\",{\"1\":{\"75\":4}}],[\"metal\",{\"1\":{\"75\":1}}],[\"method\",{\"1\":{\"75\":1}}],[\"meets\",{\"1\":{\"70\":1}}],[\"mcus\",{\"1\":{\"75\":1}}],[\"mcu\",{\"0\":{\"124\":1},\"1\":{\"70\":2,\"75\":1,\"80\":2,\"94\":2,\"105\":1}}],[\"modify\",{\"1\":{\"79\":1}}],[\"modbusprotocol\",{\"1\":{\"70\":1}}],[\"modbus\",{\"0\":{\"69\":1,\"74\":1,\"135\":1,\"136\":1},\"1\":{\"70\":4,\"71\":1,\"73\":1,\"74\":1,\"75\":19,\"78\":40,\"79\":27,\"80\":3,\"82\":1,\"83\":1}}],[\"mode\",{\"1\":{\"65\":2,\"75\":2}}],[\"minimalistboot\",{\"1\":{\"105\":1}}],[\"min\",{\"1\":{\"89\":2}}],[\"might\",{\"1\":{\"82\":1}}],[\"mit\",{\"1\":{\"52\":1}}],[\"middleware\",{\"1\":{\"40\":1,\"106\":1}}],[\"malloc\",{\"1\":{\"116\":1}}],[\"malongwei\",{\"1\":{\"48\":1,\"92\":1}}],[\"main\",{\"1\":{\"108\":1}}],[\"maintenance\",{\"1\":{\"83\":1}}],[\"ma\",{\"1\":{\"83\":1}}],[\"map\",{\"1\":{\"79\":8}}],[\"mask\",{\"1\":{\"78\":1}}],[\"masters\",{\"1\":{\"71\":1}}],[\"master\",{\"1\":{\"39\":1,\"75\":1,\"80\":1}}],[\"machine\",{\"0\":{\"77\":1},\"1\":{\"75\":1}}],[\"materials\",{\"1\":{\"72\":1}}],[\"manual\",{\"1\":{\"70\":1}}],[\"make\",{\"1\":{\"55\":1,\"79\":1}}],[\"max\",{\"1\":{\"46\":2,\"75\":1}}],[\"~and\",{\"1\":{\"78\":1}}],[\"~\",{\"1\":{\"39\":1,\"82\":1,\"110\":1}}],[\"51\",{\"1\":{\"140\":1}}],[\"50\",{\"1\":{\"75\":1}}],[\"500ms\",{\"1\":{\"25\":1}}],[\"5\",{\"0\":{\"81\":1,\"92\":1,\"111\":1},\"1\":{\"39\":1,\"78\":1,\"109\":1,\"120\":1,\"123\":1}}],[\"0x0020a400\",{\"1\":{\"140\":1}}],[\"0了\",{\"1\":{\"140\":1}}],[\"0u\",{\"1\":{\"139\":1}}],[\"0123456789abcdef0123456789abcdef\",{\"1\":{\"102\":1}}],[\"0123456789abcdef\",{\"1\":{\"102\":1}}],[\"0版本会强制选中agile\",{\"1\":{\"89\":1}}],[\"0开始agile\",{\"1\":{\"85\":1}}],[\"0\",{\"1\":{\"39\":2,\"40\":2,\"51\":4,\"73\":1,\"75\":3,\"78\":4,\"79\":3,\"85\":2,\"89\":1,\"97\":1,\"108\":5,\"109\":3,\"114\":1,\"115\":1,\"116\":4,\"117\":3,\"120\":2,\"123\":3,\"127\":1}}],[\"0+\",{\"1\":{\"29\":2,\"63\":2,\"88\":1}}],[\"目标操作对象\",{\"1\":{\"109\":1}}],[\"目前支持的后端接口如下\",{\"1\":{\"36\":1}}],[\"目录结构\",{\"0\":{\"27\":1,\"37\":1,\"51\":1,\"61\":1,\"86\":1,\"96\":1}}],[\"建议将数据放入\",{\"1\":{\"41\":1}}],[\"建议将\",{\"1\":{\"36\":1}}],[\"建议周期时间不要太长\",{\"1\":{\"31\":1,\"65\":1}}],[\"会直接接管\",{\"1\":{\"36\":1}}],[\"由于在\",{\"1\":{\"140\":1}}],[\"由于\",{\"1\":{\"36\":1}}],[\"任何接口都可快速接入\",{\"1\":{\"36\":1}}],[\"接收大小修改为\",{\"1\":{\"40\":1}}],[\"接受环形缓冲区大小\",{\"1\":{\"40\":1}}],[\"接口即可\",{\"1\":{\"105\":1}}],[\"接口\",{\"1\":{\"36\":1,\"41\":4}}],[\"接口和\",{\"1\":{\"36\":1}}],[\"接管\",{\"1\":{\"36\":1}}],[\"支持的形式是形同int\",{\"1\":{\"117\":1}}],[\"支持\",{\"0\":{\"110\":1},\"1\":{\"36\":1}}],[\"的一种优化实现\",{\"1\":{\"121\":1}}],[\"的一个简单易用的调试设备中间件\",{\"1\":{\"36\":1}}],[\"的前面会加一个长度nlen表示data的大小\",{\"1\":{\"116\":1}}],[\"的用法是gnu\",{\"1\":{\"115\":1}}],[\"的用法\",{\"1\":{\"114\":1}}],[\"的\",{\"1\":{\"105\":1}}],[\"的中间件\",{\"1\":{\"94\":1}}],[\"的基础上参照\",{\"1\":{\"50\":1}}],[\"的步骤如下\",{\"1\":{\"41\":1}}],[\"的包管理器中选中即可\",{\"1\":{\"106\":1}}],[\"的包管理器中选择它\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"89\":1}}],[\"的包管理器自动更新\",{\"1\":{\"30\":1,\"64\":1,\"89\":1}}],[\"邮箱\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"92\":1,\"111\":1}}],[\"马龙伟\",{\"1\":{\"34\":1,\"42\":1,\"57\":1,\"68\":1,\"111\":1}}],[\"维护\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"92\":1,\"111\":1}}],[\"感谢\",{\"0\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"92\":1,\"111\":1}}],[\"联系方式\",{\"0\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"92\":1,\"111\":1}}],[\"格式的\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"h>\",{\"1\":{\"108\":1}}],[\"hook\",{\"1\":{\"109\":6}}],[\"home\",{\"1\":{\"83\":1}}],[\"how\",{\"1\":{\"79\":1}}],[\"however\",{\"1\":{\"75\":1}}],[\"host\",{\"0\":{\"76\":1},\"1\":{\"75\":4}}],[\"holding\",{\"1\":{\"78\":1,\"79\":2}}],[\"hold\",{\"1\":{\"25\":5,\"31\":1}}],[\"heth\",{\"1\":{\"139\":6}}],[\"he\",{\"1\":{\"78\":1}}],[\"here\",{\"1\":{\"75\":1}}],[\"help\",{\"1\":{\"74\":1}}],[\"header\",{\"1\":{\"72\":1}}],[\"hal\",{\"1\":{\"139\":1}}],[\"handletypedef\",{\"1\":{\"139\":2}}],[\"handle\",{\"1\":{\"71\":1,\"75\":1,\"78\":3,\"79\":1,\"80\":1}}],[\"hardware\",{\"1\":{\"71\":3,\"75\":3,\"78\":1}}],[\"hpm6750\",{\"1\":{\"70\":2,\"80\":2}}],[\"h\",{\"1\":{\"45\":1,\"79\":2,\"99\":3}}],[\"https\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":2,\"68\":1,\"83\":1,\"92\":1,\"111\":1}}],[\"html\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"hhc\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"路径\",{\"1\":{\"33\":2,\"40\":2,\"56\":2,\"67\":2}}],[\"需要说明的是\",{\"1\":{\"117\":1}}],[\"需要对字符串进行\",{\"1\":{\"54\":1}}],[\"需要自己使用\",{\"1\":{\"54\":1}}],[\"需要更改\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"需要在\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"89\":1}}],[\"obtain\",{\"1\":{\"78\":3}}],[\"obtains\",{\"1\":{\"78\":1}}],[\"other\",{\"1\":{\"78\":1}}],[\"otherwise\",{\"1\":{\"78\":2}}],[\"ops\",{\"1\":{\"105\":2,\"108\":11}}],[\"open\",{\"1\":{\"81\":1}}],[\"operation\",{\"1\":{\"78\":1,\"139\":1}}],[\"operating\",{\"1\":{\"75\":1}}],[\"opportunity\",{\"1\":{\"78\":1}}],[\"optional\",{\"1\":{\"75\":1}}],[\"option\",{\"1\":{\"75\":1}}],[\"ordinary\",{\"1\":{\"78\":1}}],[\"or\",{\"1\":{\"71\":1,\"75\":3,\"78\":2,\"80\":1}}],[\"often\",{\"1\":{\"78\":1}}],[\"of\",{\"1\":{\"70\":1,\"71\":1,\"75\":6,\"78\":13,\"79\":10,\"80\":5,\"82\":1,\"89\":1}}],[\"offset\",{\"1\":{\"75\":1,\"79\":1,\"105\":5}}],[\"off\",{\"1\":{\"65\":1}}],[\"one\",{\"1\":{\"78\":3}}],[\"only\",{\"1\":{\"71\":1,\"78\":1}}],[\"online\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"70\":1,\"89\":1,\"106\":1}}],[\"on\",{\"1\":{\"65\":1,\"70\":6,\"71\":3,\"79\":1,\"80\":6}}],[\"output\",{\"1\":{\"33\":1,\"40\":1,\"41\":3,\"56\":1,\"67\":1,\"81\":1,\"106\":1}}],[\"生成未使用\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"生成的文件在\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"生姜\",{\"1\":{\"16\":1}}],[\"运行在嵌入式上的高并发高性能轻量级ftp服务器\",{\"1\":{\"44\":1}}],[\"运行\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"运行过程中强制停止\",{\"1\":{\"31\":1}}],[\"打开\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"126\":1}}],[\"下\",{\"1\":{\"32\":1,\"33\":1,\"40\":1,\"55\":1,\"56\":1,\"66\":1,\"67\":1}}],[\"示例提供了直接操作\",{\"1\":{\"105\":1}}],[\"示例\",{\"0\":{\"32\":1,\"55\":1,\"66\":1},\"1\":{\"37\":1}}],[\"启动运行\",{\"1\":{\"31\":1,\"65\":1}}],[\"初始化后端\",{\"1\":{\"105\":1}}],[\"初始化向量\",{\"1\":{\"102\":1}}],[\"初始化根节点\",{\"1\":{\"54\":1}}],[\"初始化\",{\"1\":{\"54\":1}}],[\"初始化ftp服务\",{\"1\":{\"46\":1}}],[\"初始化对象\",{\"1\":{\"31\":1,\"65\":1}}],[\"初始化环境\",{\"1\":{\"31\":1,\"65\":1}}],[\"创建\",{\"1\":{\"31\":1,\"65\":1}}],[\"创建一个线程\",{\"1\":{\"31\":1,\"65\":1}}],[\"周期调用\",{\"1\":{\"31\":1,\"65\":1}}],[\"uint32\",{\"1\":{\"109\":2,\"139\":1}}],[\"uint8\",{\"1\":{\"41\":2,\"75\":2,\"78\":1,\"105\":2,\"109\":2}}],[\"under\",{\"1\":{\"80\":1,\"81\":1}}],[\"unknown\",{\"1\":{\"78\":1,\"108\":1}}],[\"unknow\",{\"1\":{\"78\":1}}],[\"until\",{\"1\":{\"75\":1,\"139\":1}}],[\"unpack\",{\"1\":{\"71\":1}}],[\"util\",{\"1\":{\"51\":1,\"72\":1,\"79\":17}}],[\"uart1\",{\"1\":{\"40\":1}}],[\"usage\",{\"1\":{\"79\":1}}],[\"usetab\",{\"1\":{\"127\":1,\"128\":1}}],[\"use\",{\"0\":{\"74\":1},\"1\":{\"71\":1,\"78\":5,\"79\":1,\"80\":2,\"81\":1}}],[\"used\",{\"1\":{\"71\":1,\"75\":1,\"78\":11}}],[\"user\",{\"1\":{\"75\":2,\"78\":7,\"79\":1,\"108\":4}}],[\"users\",{\"1\":{\"70\":1,\"75\":2,\"79\":2}}],[\"username\",{\"1\":{\"46\":2}}],[\"usb\",{\"1\":{\"36\":1,\"40\":3,\"41\":1}}],[\"using\",{\"1\":{\"31\":1,\"65\":1,\"71\":2,\"81\":1}}],[\"upgrade\",{\"0\":{\"93\":1,\"107\":1},\"1\":{\"70\":2,\"78\":1,\"80\":2,\"94\":1,\"97\":1,\"99\":4,\"100\":1,\"101\":2,\"102\":3,\"103\":2,\"104\":2,\"105\":7,\"106\":1,\"108\":11,\"109\":31,\"110\":1,\"111\":1}}],[\"updated\",{\"1\":{\"78\":2}}],[\"updates\",{\"1\":{\"75\":1}}],[\"update\",{\"1\":{\"30\":1,\"64\":1,\"78\":1,\"89\":1}}],[\"up\",{\"1\":{\"25\":4}}],[\"如果分配的内存大于结构体的实际大小\",{\"1\":{\"116\":1}}],[\"如果你直接使用指针而不使用数组\",{\"1\":{\"115\":1}}],[\"如果\",{\"1\":{\"110\":1}}],[\"如果为\",{\"1\":{\"108\":2}}],[\"如果只想使用telnet作为console设备\",{\"1\":{\"85\":1}}],[\"如果需要感知对象执行结束\",{\"1\":{\"65\":1}}],[\"如果需要判断值是不是\",{\"1\":{\"54\":1}}],[\"如果值是整数或浮点数\",{\"1\":{\"54\":1}}],[\"如果使能需要更改\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1}}],[\"如果未使能\",{\"1\":{\"31\":1,\"65\":1}}],[\"如何打开\",{\"0\":{\"30\":1,\"64\":1,\"89\":1}}],[\"帮助文档请查看\",{\"1\":{\"31\":1,\"40\":1,\"54\":1,\"65\":1}}],[\"中可以屏蔽接收状态位的判断\",{\"1\":{\"140\":1}}],[\"中断时发送事件集\",{\"1\":{\"140\":1}}],[\"中断处理函数中\",{\"1\":{\"140\":1}}],[\"中作为初始化的参数\",{\"1\":{\"108\":1}}],[\"中后端的实现\",{\"1\":{\"105\":1}}],[\"中的\",{\"1\":{\"36\":1}}],[\"中\",{\"1\":{\"30\":1,\"64\":1,\"89\":1,\"117\":1,\"139\":1}}],[\"duff\",{\"1\":{\"121\":1,\"123\":1}}],[\"dst\",{\"1\":{\"108\":7,\"109\":2}}],[\"dfs\",{\"1\":{\"88\":1}}],[\"discrete\",{\"1\":{\"78\":1,\"79\":2}}],[\"different\",{\"1\":{\"78\":2}}],[\"dirty\",{\"1\":{\"78\":1}}],[\"directory\",{\"0\":{\"72\":1}}],[\"directly\",{\"1\":{\"71\":1}}],[\"dmaomr\",{\"1\":{\"139\":2}}],[\"dma\",{\"1\":{\"75\":2,\"140\":1}}],[\"dataend\",{\"1\":{\"140\":1}}],[\"databytes\",{\"1\":{\"116\":3}}],[\"data\",{\"1\":{\"75\":23,\"78\":42,\"79\":8,\"105\":6,\"108\":6,\"116\":3}}],[\"dynamic\",{\"1\":{\"65\":1}}],[\"delay\",{\"1\":{\"139\":2}}],[\"decompress\",{\"1\":{\"106\":2}}],[\"decrypt\",{\"1\":{\"106\":1}}],[\"deinit\",{\"1\":{\"105\":2}}],[\"debug\",{\"1\":{\"89\":1,\"106\":1}}],[\"debugging\",{\"1\":{\"40\":1}}],[\"demonstrates\",{\"1\":{\"80\":2}}],[\"demos\",{\"1\":{\"70\":1,\"80\":1,\"94\":1,\"105\":1}}],[\"define\",{\"1\":{\"100\":1,\"101\":2,\"102\":3,\"103\":2,\"104\":2}}],[\"defined\",{\"1\":{\"79\":1}}],[\"definitions\",{\"1\":{\"79\":1}}],[\"definition\",{\"1\":{\"79\":8}}],[\"deserialize\",{\"1\":{\"75\":1}}],[\"description\",{\"0\":{\"78\":1},\"1\":{\"72\":1}}],[\"determined\",{\"1\":{\"75\":1,\"79\":1}}],[\"determine\",{\"1\":{\"75\":1}}],[\"details\",{\"1\":{\"73\":1}}],[\"developed\",{\"1\":{\"71\":2}}],[\"dev\",{\"1\":{\"41\":3}}],[\"device这样就简单漂亮地解决了边界条件的问题\",{\"1\":{\"123\":1}}],[\"device\",{\"1\":{\"36\":2,\"40\":5,\"41\":3,\"121\":1}}],[\"drivers\",{\"1\":{\"30\":1,\"40\":1,\"64\":1}}],[\"double\",{\"1\":{\"117\":2}}],[\"done\",{\"1\":{\"79\":1}}],[\"do\",{\"1\":{\"78\":1,\"120\":1,\"123\":1}}],[\"does\",{\"1\":{\"71\":2}}],[\"doxyfile\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"doxywizard\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"doxygen\",{\"0\":{\"33\":1,\"56\":1,\"67\":1,\"81\":1},\"1\":{\"31\":1,\"33\":1,\"40\":3,\"54\":1,\"56\":1,\"65\":1,\"67\":1,\"74\":1,\"81\":1}}],[\"document\",{\"0\":{\"81\":1},\"1\":{\"74\":1}}],[\"documentation\",{\"1\":{\"70\":1,\"72\":1}}],[\"doc\",{\"1\":{\"27\":1,\"31\":1,\"37\":1,\"40\":1,\"51\":1,\"54\":1,\"61\":1,\"65\":1,\"72\":1,\"74\":1,\"96\":1}}],[\"down\",{\"1\":{\"25\":3}}],[\"依赖\",{\"0\":{\"29\":1,\"39\":1,\"53\":1,\"63\":1,\"88\":1},\"1\":{\"99\":1}}],[\"文件夹下提供了配置文件模板\",{\"1\":{\"99\":1}}],[\"文件夹提供\",{\"1\":{\"94\":1}}],[\"文件夹中的例子和\",{\"1\":{\"41\":1}}],[\"文件\",{\"1\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"87\":1,\"97\":1,\"126\":1}}],[\"文档目录\",{\"1\":{\"51\":1,\"61\":1}}],[\"文档生成\",{\"0\":{\"33\":1,\"56\":1,\"67\":1},\"1\":{\"40\":1}}],[\"文档\",{\"1\":{\"27\":1,\"37\":1,\"96\":1}}],[\"详见\",{\"1\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"87\":1,\"97\":1}}],[\"详细注释\",{\"1\":{\"26\":1,\"60\":1}}],[\"许可\",{\"1\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"87\":1,\"97\":1}}],[\"许可证\",{\"0\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"87\":1,\"97\":1}}],[\"llvm\",{\"1\":{\"127\":1}}],[\"log\",{\"1\":{\"101\":2,\"106\":1}}],[\"longwei\",{\"1\":{\"83\":1}}],[\"loogg\",{\"1\":{\"34\":1,\"42\":1,\"45\":1,\"48\":1,\"57\":1,\"68\":1,\"83\":1,\"92\":1,\"111\":1}}],[\"least\",{\"1\":{\"139\":1}}],[\"led\",{\"0\":{\"58\":1,\"64\":1,\"65\":1},\"1\":{\"59\":3,\"62\":1,\"64\":3,\"65\":14,\"68\":1}}],[\"length\",{\"1\":{\"75\":12,\"78\":12,\"79\":1,\"80\":1}}],[\"len\",{\"1\":{\"41\":2,\"79\":4,\"108\":2}}],[\"larger\",{\"1\":{\"79\":1}}],[\"latest\",{\"1\":{\"40\":1,\"89\":1}}],[\"languages\",{\"0\":{\"3\":1}}],[\"listen\",{\"1\":{\"89\":2}}],[\"linux\",{\"0\":{\"127\":1},\"1\":{\"80\":1,\"127\":1}}],[\"limited\",{\"1\":{\"79\":1}}],[\"lightweight\",{\"1\":{\"70\":1}}],[\"light\",{\"1\":{\"65\":2}}],[\"libraries\",{\"1\":{\"30\":1,\"40\":1,\"64\":1}}],[\"license\",{\"0\":{\"73\":1},\"1\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"73\":2,\"87\":1,\"97\":1}}],[\"lgplv2\",{\"1\":{\"28\":1,\"38\":1,\"62\":1,\"87\":1}}],[\"遵循\",{\"1\":{\"28\":1,\"38\":1,\"52\":1,\"62\":1,\"87\":1,\"97\":1}}],[\"pdf\",{\"1\":{\"139\":1}}],[\"p\",{\"1\":{\"116\":2}}],[\"pud\",{\"1\":{\"78\":1}}],[\"pure\",{\"1\":{\"71\":2}}],[\"perform\",{\"1\":{\"78\":1}}],[\"peripheral\",{\"1\":{\"30\":1,\"40\":1,\"64\":1}}],[\"please\",{\"1\":{\"74\":1}}],[\"plugin\",{\"1\":{\"40\":4}}],[\"pc\",{\"1\":{\"70\":1,\"80\":1,\"94\":1}}],[\"point\",{\"1\":{\"80\":2}}],[\"pointer\",{\"1\":{\"78\":1,\"79\":1}}],[\"position\",{\"1\":{\"78\":1}}],[\"posix\",{\"1\":{\"36\":1,\"88\":1}}],[\"porting\",{\"1\":{\"96\":1,\"99\":1}}],[\"port\",{\"1\":{\"46\":2,\"71\":1,\"75\":1,\"89\":2}}],[\"page\",{\"1\":{\"83\":1}}],[\"path\",{\"1\":{\"81\":2}}],[\"packet\",{\"1\":{\"78\":1}}],[\"packaged\",{\"1\":{\"78\":1}}],[\"packages\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"89\":1,\"106\":2}}],[\"package\",{\"1\":{\"28\":1,\"30\":2,\"38\":1,\"40\":1,\"62\":1,\"64\":2,\"71\":1,\"75\":1,\"78\":2,\"87\":1,\"89\":1,\"90\":1}}],[\"param\",{\"1\":{\"78\":3}}],[\"parameter\",{\"1\":{\"78\":2}}],[\"part\",{\"1\":{\"78\":1}}],[\"partial\",{\"1\":{\"78\":1}}],[\"parsed\",{\"1\":{\"78\":2}}],[\"parse\",{\"1\":{\"54\":1,\"75\":1}}],[\"passed\",{\"1\":{\"78\":1}}],[\"pass\",{\"1\":{\"75\":1,\"78\":4}}],[\"password\",{\"1\":{\"46\":2}}],[\"precautions\",{\"1\":{\"79\":1}}],[\"press\",{\"1\":{\"25\":5}}],[\"printf\",{\"1\":{\"101\":2}}],[\"private\",{\"1\":{\"78\":2,\"79\":2}}],[\"priority\",{\"1\":{\"40\":2,\"89\":2}}],[\"practical\",{\"1\":{\"72\":1}}],[\"progress\",{\"1\":{\"109\":3}}],[\"program\",{\"1\":{\"75\":1}}],[\"problem\",{\"1\":{\"82\":1}}],[\"problems\",{\"1\":{\"75\":1}}],[\"prone\",{\"1\":{\"75\":1}}],[\"provided\",{\"1\":{\"75\":1,\"79\":1,\"80\":1}}],[\"provides\",{\"1\":{\"70\":1,\"72\":1,\"79\":1,\"80\":1}}],[\"protocols\",{\"1\":{\"71\":2}}],[\"protocol\",{\"1\":{\"70\":1,\"71\":2}}],[\"processing\",{\"1\":{\"78\":1,\"79\":2}}],[\"processes\",{\"1\":{\"75\":1,\"78\":1}}],[\"processed\",{\"1\":{\"75\":2,\"78\":3}}],[\"process\",{\"1\":{\"31\":1,\"65\":1,\"78\":1,\"79\":1,\"140\":1}}],[\"pkg\",{\"1\":{\"31\":1,\"65\":1}}],[\"pkgs\",{\"1\":{\"30\":1,\"64\":1,\"89\":1}}],[\"32\",{\"1\":{\"102\":1}}],[\"3分钟\",{\"1\":{\"89\":1}}],[\"3\",{\"0\":{\"28\":1,\"31\":1,\"32\":1,\"33\":1,\"39\":1,\"41\":1,\"53\":1,\"57\":1,\"62\":1,\"65\":1,\"66\":1,\"67\":1,\"73\":1,\"77\":1,\"78\":1,\"79\":1,\"82\":1,\"88\":1,\"90\":1,\"97\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1},\"1\":{\"29\":1,\"39\":1,\"63\":1,\"78\":2,\"88\":1,\"89\":1,\"109\":1,\"120\":1,\"123\":1}}],[\"头文件目录\",{\"1\":{\"61\":1,\"86\":1}}],[\"头文件\",{\"1\":{\"27\":1,\"37\":1,\"96\":1,\"99\":1}}],[\"素材\",{\"1\":{\"27\":1,\"37\":1,\"96\":1}}],[\"说明\",{\"1\":{\"27\":1,\"37\":1,\"51\":1,\"61\":1,\"86\":1,\"96\":1}}],[\"名称\",{\"1\":{\"27\":1,\"37\":1,\"51\":1,\"61\":1,\"86\":1,\"96\":1}}],[\"23\",{\"1\":{\"89\":1}}],[\"26\",{\"1\":{\"89\":1}}],[\"260\",{\"1\":{\"75\":1}}],[\"256\",{\"1\":{\"89\":1}}],[\"250\",{\"1\":{\"79\":1}}],[\"255\",{\"1\":{\"78\":1}}],[\"2544047213\",{\"1\":{\"34\":1,\"42\":1,\"48\":1,\"57\":1,\"68\":1,\"83\":1,\"92\":1,\"111\":1}}],[\"20\",{\"1\":{\"75\":1}}],[\"2048\",{\"1\":{\"40\":2,\"45\":1,\"89\":2}}],[\"27\",{\"1\":{\"45\":1}}],[\"2\",{\"0\":{\"27\":1,\"30\":1,\"33\":1,\"38\":1,\"40\":1,\"52\":1,\"54\":1,\"55\":1,\"56\":2,\"61\":1,\"64\":1,\"67\":1,\"72\":1,\"74\":1,\"75\":1,\"76\":2,\"77\":1,\"78\":1,\"79\":2,\"80\":1,\"81\":1,\"87\":1,\"89\":1,\"96\":1,\"98\":1,\"99\":1,\"105\":2,\"106\":1,\"109\":1},\"1\":{\"73\":1,\"76\":1,\"78\":2,\"97\":1,\"109\":1,\"120\":1,\"123\":1}}],[\"操作对象\",{\"1\":{\"109\":1}}],[\"操作接口\",{\"1\":{\"95\":1,\"105\":1}}],[\"操作简单\",{\"1\":{\"26\":1,\"60\":1}}],[\"操作的\",{\"1\":{\"25\":1,\"59\":1}}],[\"断言保护\",{\"1\":{\"26\":1,\"60\":1}}],[\"特性\",{\"0\":{\"26\":1,\"60\":1,\"95\":1}}],[\"即程序中止\",{\"1\":{\"123\":1}}],[\"即\",{\"1\":{\"25\":1}}],[\"默认用户名和密码都为\",{\"1\":{\"45\":1}}],[\"默认端口21\",{\"1\":{\"45\":1}}],[\"默认每隔\",{\"1\":{\"25\":1}}],[\"默认的消抖时间为\",{\"1\":{\"25\":1}}],[\"触发一次\",{\"1\":{\"25\":3}}],[\"从而解决了剩余字节的处理问题\",{\"1\":{\"123\":1}}],[\"从后端读取数据\",{\"1\":{\"105\":1}}],[\"从后端读取数据接口\",{\"1\":{\"41\":1}}],[\"从2\",{\"1\":{\"85\":1}}],[\"从\",{\"1\":{\"25\":2}}],[\"设备名\",{\"1\":{\"40\":1}}],[\"设备\",{\"1\":{\"36\":2}}],[\"设备驱动及posix对接分析与实践\",{\"0\":{\"23\":1}}],[\"设置方式\",{\"0\":{\"126\":1}}],[\"设置错误钩子函数\",{\"1\":{\"109\":1}}],[\"设置进度钩子函数\",{\"1\":{\"109\":1}}],[\"设置步骤钩子函数\",{\"1\":{\"109\":1}}],[\"设置钩子函数\",{\"1\":{\"109\":1}}],[\"设置回调函数\",{\"1\":{\"65\":1}}],[\"设置服务器监听端口\",{\"1\":{\"46\":1}}],[\"设置客户端欢迎词\",{\"1\":{\"46\":1}}],[\"设置客户端密码\",{\"1\":{\"46\":1}}],[\"设置客户端用户名\",{\"1\":{\"46\":1}}],[\"设置最大客户端数量\",{\"1\":{\"46\":1}}],[\"设置事件触发回调\",{\"1\":{\"31\":1}}],[\"设置每个事件的触发回调\",{\"1\":{\"25\":1}}],[\"cpp\",{\"1\":{\"126\":2}}],[\"c语音冷门知识点\",{\"1\":{\"119\":1}}],[\"c语言本身也对跳转到循环内部提供了支持\",{\"1\":{\"122\":1}}],[\"c语言结构体中char\",{\"1\":{\"114\":1}}],[\"c语言中的柔性数组\",{\"1\":{\"114\":1}}],[\"c89不支持这种东西\",{\"1\":{\"117\":1}}],[\"c99所支持的是incomplete\",{\"1\":{\"117\":1}}],[\"c99把它作为一种特例加入了标准\",{\"1\":{\"117\":1}}],[\"c99\",{\"0\":{\"117\":1},\"1\":{\"117\":2}}],[\"c的扩展\",{\"1\":{\"115\":1}}],[\"c++代码格式化\",{\"0\":{\"125\":1}}],[\"c++\",{\"0\":{\"112\":1}}],[\"cur\",{\"1\":{\"109\":1}}],[\"current\",{\"1\":{\"78\":3}}],[\"cup\",{\"1\":{\"82\":1}}],[\"custom\",{\"1\":{\"71\":1,\"78\":2}}],[\"ctx\",{\"1\":{\"78\":6,\"79\":4}}],[\"certain\",{\"1\":{\"75\":1}}],[\"clock\",{\"1\":{\"139\":1}}],[\"clk\",{\"1\":{\"139\":2}}],[\"clang\",{\"1\":{\"126\":2}}],[\"client\",{\"1\":{\"89\":2}}],[\"click\",{\"1\":{\"25\":3}}],[\"clear\",{\"1\":{\"75\":3,\"78\":1}}],[\"case语句便可跳转到循环内部\",{\"1\":{\"122\":1}}],[\"case\",{\"1\":{\"120\":8,\"122\":1,\"123\":9}}],[\"cache\",{\"1\":{\"75\":1,\"78\":1}}],[\"calling\",{\"1\":{\"79\":1}}],[\"called\",{\"1\":{\"78\":5}}],[\"call\",{\"1\":{\"71\":1,\"75\":1,\"78\":2}}],[\"callbacks\",{\"1\":{\"75\":1,\"78\":1}}],[\"callback\",{\"1\":{\"65\":1,\"75\":2,\"78\":12,\"79\":4,\"109\":6}}],[\"cannot\",{\"1\":{\"75\":1}}],[\"can\",{\"1\":{\"71\":2,\"75\":3,\"78\":5,\"79\":4,\"80\":1}}],[\"char\",{\"1\":{\"108\":1,\"115\":2,\"116\":3,\"117\":2}}],[\"changing\",{\"1\":{\"79\":1}}],[\"changed\",{\"1\":{\"81\":1}}],[\"change\",{\"1\":{\"65\":2,\"78\":1,\"81\":1}}],[\"check\",{\"1\":{\"78\":1,\"79\":2}}],[\"chm\",{\"1\":{\"31\":1,\"33\":1,\"40\":2,\"54\":1,\"56\":1,\"65\":1,\"67\":1,\"74\":1,\"81\":1}}],[\"cjson\",{\"1\":{\"50\":1}}],[\"c\",{\"0\":{\"112\":1,\"125\":1},\"1\":{\"50\":1,\"53\":1,\"71\":2,\"95\":1,\"117\":2,\"126\":2,\"139\":1}}],[\"cmd51长度为8\",{\"1\":{\"140\":1}}],[\"cmd6\",{\"1\":{\"140\":1}}],[\"cmd\",{\"1\":{\"41\":1,\"140\":1}}],[\"cdc\",{\"1\":{\"36\":1,\"40\":4,\"41\":1}}],[\"columnlimit\",{\"1\":{\"127\":1,\"128\":1}}],[\"count\",{\"1\":{\"120\":3,\"123\":5}}],[\"coffee\",{\"1\":{\"82\":1}}],[\"copy\",{\"1\":{\"79\":1,\"121\":1}}],[\"coil\",{\"1\":{\"78\":1,\"79\":2}}],[\"coils\",{\"1\":{\"78\":2}}],[\"codes\",{\"1\":{\"75\":2,\"78\":8,\"79\":1,\"80\":2}}],[\"code\",{\"0\":{\"129\":1},\"1\":{\"72\":1,\"75\":6,\"78\":4,\"79\":3,\"82\":1,\"109\":1}}],[\"corresponding\",{\"1\":{\"71\":1,\"79\":2}}],[\"conf\",{\"1\":{\"99\":1}}],[\"config\",{\"1\":{\"99\":2}}],[\"configure\",{\"1\":{\"75\":1}}],[\"confirmation\",{\"1\":{\"75\":2}}],[\"conveniently\",{\"1\":{\"79\":1}}],[\"contact\",{\"0\":{\"83\":1}}],[\"contains\",{\"1\":{\"78\":1}}],[\"control\",{\"1\":{\"41\":3}}],[\"consists\",{\"1\":{\"78\":1}}],[\"consistent\",{\"1\":{\"78\":2}}],[\"const\",{\"1\":{\"41\":1,\"78\":2,\"79\":5,\"105\":1,\"108\":5}}],[\"console软件包\",{\"1\":{\"89\":1}}],[\"console的插件使用\",{\"1\":{\"85\":1,\"90\":1}}],[\"console\",{\"0\":{\"35\":1,\"40\":1,\"41\":1},\"1\":{\"36\":6,\"38\":1,\"40\":17,\"41\":6,\"42\":1,\"88\":1}}],[\"command\",{\"1\":{\"140\":2}}],[\"compare\",{\"1\":{\"100\":1,\"106\":1}}],[\"compiled\",{\"1\":{\"80\":1}}],[\"complete\",{\"1\":{\"78\":2}}],[\"complies\",{\"1\":{\"73\":1}}],[\"compliant\",{\"1\":{\"71\":1}}],[\"compute\",{\"1\":{\"75\":4}}],[\"components\",{\"1\":{\"72\":1}}],[\"compelete\",{\"1\":{\"65\":1}}],[\"com\",{\"1\":{\"34\":2,\"42\":2,\"48\":2,\"57\":3,\"68\":2,\"83\":2,\"92\":2,\"111\":2}}],[\"create\",{\"1\":{\"31\":1,\"65\":1}}],[\"cycles\",{\"1\":{\"139\":1}}],[\"cycle\",{\"1\":{\"25\":1,\"31\":1}}],[\"cb\",{\"1\":{\"25\":1,\"31\":1,\"75\":4,\"78\":2}}],[\"cnt\",{\"1\":{\"25\":1}}],[\"eth\",{\"1\":{\"139\":9}}],[\"ethernet\",{\"1\":{\"89\":1}}],[\"einval\",{\"1\":{\"109\":1}}],[\"eerase\",{\"1\":{\"109\":1}}],[\"ewrite\",{\"1\":{\"109\":1}}],[\"efull\",{\"1\":{\"109\":1}}],[\"eread\",{\"1\":{\"109\":1}}],[\"error\",{\"1\":{\"109\":3}}],[\"err\",{\"1\":{\"109\":2}}],[\"erase\",{\"1\":{\"105\":2,\"109\":2}}],[\"eok\",{\"1\":{\"109\":1}}],[\"email\",{\"1\":{\"83\":1}}],[\"element\",{\"1\":{\"75\":4}}],[\"elimination\",{\"1\":{\"25\":1,\"31\":1}}],[\"everify\",{\"1\":{\"109\":1}}],[\"every\",{\"1\":{\"75\":1}}],[\"event\",{\"1\":{\"25\":10,\"31\":1}}],[\"easy\",{\"1\":{\"71\":1}}],[\"enet修改\",{\"1\":{\"139\":1}}],[\"enum\",{\"1\":{\"109\":2}}],[\"end\",{\"1\":{\"75\":4,\"78\":2,\"79\":4}}],[\"enabled\",{\"1\":{\"81\":1}}],[\"enable\",{\"1\":{\"40\":6,\"75\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":2,\"104\":2,\"106\":7}}],[\"environment\",{\"1\":{\"75\":3}}],[\"env\",{\"1\":{\"31\":1,\"65\":1}}],[\"extern\",{\"1\":{\"108\":1}}],[\"exception\",{\"1\":{\"75\":2,\"78\":4}}],[\"expected\",{\"1\":{\"75\":2}}],[\"exit\",{\"1\":{\"75\":1}}],[\"example\",{\"0\":{\"80\":1},\"1\":{\"40\":2,\"94\":1,\"96\":1}}],[\"examples\",{\"1\":{\"27\":1,\"32\":1,\"37\":1,\"41\":1,\"51\":1,\"55\":1,\"61\":1,\"66\":1,\"70\":3,\"72\":2,\"79\":2,\"80\":5}}],[\"execute\",{\"1\":{\"78\":1}}],[\"exe\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"种事件\",{\"1\":{\"25\":1}}],[\"4\",{\"0\":{\"29\":1,\"34\":1,\"42\":1,\"63\":1,\"68\":1,\"80\":1,\"83\":1,\"91\":1,\"110\":1},\"1\":{\"25\":1,\"29\":1,\"39\":2,\"40\":2,\"63\":1,\"78\":1,\"109\":1,\"120\":1,\"123\":1,\"127\":1,\"128\":2,\"140\":1}}],[\"属性获取\",{\"1\":{\"25\":1}}],[\"属性\",{\"1\":{\"25\":1}}],[\"rbl\",{\"1\":{\"108\":1}}],[\"rsp\",{\"1\":{\"78\":2}}],[\"rate\",{\"1\":{\"75\":1}}],[\"run\",{\"1\":{\"71\":1,\"80\":1,\"81\":1}}],[\"ringbuffer\",{\"1\":{\"41\":1}}],[\"release\",{\"1\":{\"108\":1,\"109\":1}}],[\"related\",{\"1\":{\"79\":1}}],[\"ret\",{\"1\":{\"79\":1}}],[\"return\",{\"1\":{\"75\":1,\"78\":1,\"108\":1}}],[\"returned\",{\"1\":{\"75\":5}}],[\"returns\",{\"1\":{\"75\":4}}],[\"requires\",{\"1\":{\"79\":1}}],[\"required\",{\"1\":{\"78\":1}}],[\"requested\",{\"1\":{\"75\":1}}],[\"request\",{\"1\":{\"75\":5}}],[\"remove\",{\"1\":{\"78\":1}}],[\"real\",{\"1\":{\"78\":2}}],[\"reasonable\",{\"1\":{\"75\":1}}],[\"reading\",{\"1\":{\"75\":1}}],[\"reads\",{\"1\":{\"75\":1}}],[\"read\",{\"1\":{\"41\":3,\"75\":1,\"78\":7,\"79\":1,\"105\":2}}],[\"reset\",{\"1\":{\"139\":1}}],[\"respond\",{\"1\":{\"78\":1,\"79\":3}}],[\"responses\",{\"1\":{\"78\":1}}],[\"response\",{\"1\":{\"75\":4,\"78\":4}}],[\"restricted\",{\"1\":{\"75\":1}}],[\"restart\",{\"1\":{\"46\":1,\"47\":1}}],[\"recommended\",{\"1\":{\"75\":2,\"78\":1}}],[\"received\",{\"1\":{\"78\":1}}],[\"receive\",{\"1\":{\"75\":6,\"78\":1}}],[\"reception\",{\"1\":{\"75\":4,\"78\":1}}],[\"reference\",{\"1\":{\"75\":1}}],[\"reg\",{\"1\":{\"139\":1}}],[\"regarding\",{\"1\":{\"75\":1}}],[\"registers\",{\"1\":{\"78\":6,\"79\":7}}],[\"register\",{\"1\":{\"41\":1,\"78\":16,\"79\":19}}],[\"repeat\",{\"1\":{\"25\":1}}],[\"rx\",{\"1\":{\"40\":2,\"89\":2,\"139\":1}}],[\"rthw\",{\"1\":{\"140\":2}}],[\"rtu\",{\"1\":{\"71\":3,\"75\":6,\"80\":3}}],[\"rt\",{\"0\":{\"22\":1,\"106\":1,\"138\":1},\"1\":{\"25\":1,\"26\":1,\"29\":2,\"30\":3,\"36\":3,\"39\":2,\"40\":4,\"41\":4,\"59\":1,\"60\":1,\"63\":2,\"64\":3,\"70\":2,\"80\":2,\"88\":1,\"89\":3,\"95\":1,\"106\":2}}],[\"更改模式\",{\"1\":{\"65\":1}}],[\"更改两次按键按下间隔的超时时间\",{\"1\":{\"31\":1}}],[\"更改持续按下触发周期时间\",{\"1\":{\"31\":1}}],[\"更改触发周期\",{\"1\":{\"25\":1}}],[\"更改对象的\",{\"1\":{\"25\":1}}],[\"更改消抖时间\",{\"1\":{\"25\":1,\"31\":1}}],[\"记为多次操作\",{\"1\":{\"25\":1}}],[\"间隔在\",{\"1\":{\"25\":1}}],[\"tmpreg1\",{\"1\":{\"139\":3}}],[\"true\",{\"1\":{\"127\":1,\"128\":1}}],[\"transmit\",{\"1\":{\"139\":1}}],[\"transmits\",{\"1\":{\"78\":1}}],[\"transmission\",{\"1\":{\"80\":2}}],[\"transplantation\",{\"0\":{\"75\":1},\"1\":{\"76\":1}}],[\"taken\",{\"1\":{\"139\":1}}],[\"tail\",{\"1\":{\"109\":2}}],[\"tabwidth\",{\"1\":{\"128\":1}}],[\"tab\",{\"1\":{\"79\":4}}],[\"test\",{\"1\":{\"117\":2}}],[\"template\",{\"1\":{\"99\":1}}],[\"tells\",{\"1\":{\"78\":1}}],[\"telnet不会强制打开\",{\"1\":{\"91\":1}}],[\"telnet客户端默认超时时间\",{\"1\":{\"89\":1}}],[\"telnet发送环形缓冲区大小\",{\"1\":{\"89\":1}}],[\"telnet接收环形缓冲区大小\",{\"1\":{\"89\":1}}],[\"telnet监听端口号\",{\"1\":{\"89\":1}}],[\"telnet线程优先级\",{\"1\":{\"89\":1}}],[\"telnet线程堆栈大小\",{\"1\":{\"89\":1}}],[\"telnet作为agile\",{\"1\":{\"85\":1}}],[\"telnet\",{\"0\":{\"84\":1,\"89\":1,\"90\":1},\"1\":{\"36\":2,\"40\":5,\"41\":1,\"87\":1,\"89\":14,\"90\":1,\"92\":1}}],[\"tx\",{\"1\":{\"89\":2,\"139\":1}}],[\"typedef\",{\"1\":{\"78\":1,\"79\":2,\"109\":5,\"117\":2}}],[\"type\",{\"1\":{\"75\":7,\"78\":2,\"79\":1,\"117\":1}}],[\"total\",{\"1\":{\"109\":1}}],[\"tools\",{\"1\":{\"96\":1}}],[\"to\",{\"1\":{\"71\":3,\"75\":13,\"78\":38,\"79\":9,\"80\":1,\"81\":3,\"120\":9,\"123\":10,\"139\":1}}],[\"toggle\",{\"1\":{\"65\":1}}],[\"tcp\",{\"1\":{\"71\":3,\"75\":6,\"80\":1,\"89\":1}}],[\"tcflsh\",{\"1\":{\"41\":1}}],[\"things\",{\"1\":{\"89\":1}}],[\"this\",{\"1\":{\"75\":4,\"78\":2}}],[\"thanks\",{\"0\":{\"83\":1}}],[\"than\",{\"1\":{\"75\":2}}],[\"that\",{\"1\":{\"70\":3,\"75\":1,\"80\":2}}],[\"there\",{\"1\":{\"78\":1}}],[\"these\",{\"1\":{\"75\":1}}],[\"the\",{\"1\":{\"70\":2,\"71\":7,\"73\":2,\"74\":1,\"75\":43,\"78\":71,\"79\":16,\"80\":3,\"81\":2,\"82\":1,\"139\":2}}],[\"threadkernel\",{\"1\":{\"36\":1}}],[\"thread\",{\"0\":{\"22\":1,\"106\":1,\"138\":1},\"1\":{\"25\":1,\"26\":1,\"29\":2,\"30\":3,\"31\":1,\"36\":1,\"39\":2,\"40\":8,\"44\":1,\"59\":1,\"60\":1,\"63\":2,\"64\":3,\"65\":1,\"70\":2,\"80\":2,\"88\":1,\"89\":7,\"95\":1,\"106\":2}}],[\"t\",{\"1\":{\"41\":6,\"54\":1,\"75\":3,\"78\":7,\"79\":14,\"105\":7,\"108\":2,\"109\":16,\"139\":1}}],[\"tty\",{\"1\":{\"40\":1}}],[\"tinyusb\",{\"1\":{\"36\":1,\"40\":4}}],[\"timeout\",{\"1\":{\"89\":2}}],[\"time\",{\"1\":{\"25\":3,\"31\":3,\"71\":1,\"75\":1}}],[\"two\",{\"1\":{\"31\":1,\"75\":1}}],[\"b\",{\"1\":{\"117\":2}}],[\"bin\",{\"1\":{\"108\":1}}],[\"bit\",{\"1\":{\"79\":1,\"139\":1}}],[\"bits\",{\"1\":{\"79\":6}}],[\"big\",{\"1\":{\"78\":1}}],[\"breakbeforebraces\",{\"1\":{\"127\":1}}],[\"broadcast\",{\"1\":{\"78\":2,\"80\":1}}],[\"brief\",{\"1\":{\"41\":1,\"78\":1}}],[\"byte\",{\"1\":{\"108\":1}}],[\"bytes\",{\"1\":{\"75\":2}}],[\"by\",{\"1\":{\"75\":3,\"78\":8,\"79\":2}}],[\"blocking\",{\"1\":{\"75\":1}}],[\"body\",{\"1\":{\"78\":1}}],[\"both\",{\"1\":{\"75\":2}}],[\"boot\",{\"1\":{\"70\":2,\"80\":2}}],[\"bootloader\",{\"1\":{\"70\":2,\"80\":2,\"94\":1,\"106\":1}}],[\"be\",{\"1\":{\"71\":1,\"75\":10,\"78\":22,\"80\":1,\"81\":2,\"139\":1}}],[\"bare\",{\"1\":{\"75\":1}}],[\"baud\",{\"1\":{\"75\":1}}],[\"basedonstyle\",{\"1\":{\"127\":1,\"128\":1}}],[\"based\",{\"1\":{\"70\":2,\"79\":1,\"80\":2}}],[\"backend\",{\"1\":{\"41\":2}}],[\"building\",{\"1\":{\"106\":1}}],[\"but\",{\"1\":{\"75\":1,\"78\":1,\"79\":2}}],[\"button\",{\"0\":{\"24\":1,\"30\":1,\"31\":1},\"1\":{\"25\":4,\"28\":1,\"30\":3,\"31\":2,\"34\":1}}],[\"bufsz\",{\"1\":{\"79\":2}}],[\"buf\",{\"1\":{\"41\":2,\"78\":22,\"79\":4,\"105\":2}}],[\"buffers\",{\"1\":{\"75\":2}}],[\"buffer\",{\"1\":{\"40\":2,\"75\":11,\"78\":3,\"89\":4}}],[\"bsp\",{\"1\":{\"30\":1,\"64\":1,\"89\":1,\"90\":2}}],[\"btn\",{\"1\":{\"25\":12,\"31\":10}}],[\"可作为参考\",{\"1\":{\"105\":1}}],[\"可将过程及进度显示在自定义硬件上\",{\"1\":{\"95\":1}}],[\"可在任何形式的硬件上直接使用\",{\"1\":{\"95\":1}}],[\"可直接\",{\"1\":{\"55\":1}}],[\"可直接在电脑上编译\",{\"1\":{\"53\":1}}],[\"可不实现\",{\"1\":{\"41\":1}}],[\"可以出现在任意子语句之前\",{\"1\":{\"122\":1}}],[\"可以使用指针方法\",{\"1\":{\"117\":1}}],[\"可以使用\",{\"1\":{\"105\":4}}],[\"可以使用应用层传递的\",{\"1\":{\"105\":1}}],[\"可以参考\",{\"1\":{\"41\":1,\"105\":1}}],[\"可以通过\",{\"1\":{\"25\":3}}],[\"可忽略\",{\"1\":{\"31\":2}}],[\"可通过对象的\",{\"1\":{\"25\":1}}],[\"可选\",{\"1\":{\"12\":1}}],[\"按下\",{\"1\":{\"25\":4}}],[\"按键操作的状态变化为\",{\"1\":{\"25\":1}}],[\">dmaomr\",{\"1\":{\"139\":4}}],[\">instance\",{\"1\":{\"139\":4}}],[\">init\",{\"1\":{\"108\":1}}],[\">设置\",{\"1\":{\"126\":1}}],[\">首选项\",{\"1\":{\"126\":1}}],[\">nlen\",{\"1\":{\"116\":1}}],[\">ops\",{\"1\":{\"105\":5,\"108\":1}}],[\">user\",{\"1\":{\"105\":1}}],[\">send\",{\"1\":{\"78\":3}}],[\">=\",{\"1\":{\"40\":2}}],[\">\",{\"1\":{\"25\":6,\"30\":1,\"40\":3,\"64\":1,\"89\":3,\"106\":2,\"120\":1,\"123\":1}}],[\"未按下\",{\"1\":{\"25\":6}}],[\"提供过程回调\",{\"1\":{\"95\":1}}],[\"提供的\",{\"1\":{\"26\":1,\"60\":1}}],[\"提供了后端接口结构体定义\",{\"1\":{\"41\":1}}],[\"提供了\",{\"1\":{\"25\":1}}],[\"提供\",{\"1\":{\"25\":1,\"59\":1}}],[\"介绍及移植使用\",{\"0\":{\"136\":1}}],[\"介绍\",{\"0\":{\"25\":1,\"36\":1,\"44\":1,\"50\":1,\"59\":1,\"85\":1,\"94\":1,\"109\":1}}],[\"1999里面\",{\"1\":{\"115\":1}}],[\"16\",{\"1\":{\"102\":1}}],[\"125\",{\"1\":{\"79\":1}}],[\"10\",{\"1\":{\"116\":1}}],[\"100\",{\"1\":{\"45\":1,\"128\":1}}],[\"1024\",{\"1\":{\"40\":2}}],[\"1s\",{\"1\":{\"25\":1}}],[\"15ms\",{\"1\":{\"25\":1}}],[\"1\",{\"0\":{\"25\":1,\"26\":2,\"27\":1,\"28\":1,\"29\":1,\"32\":1,\"36\":1,\"37\":2,\"38\":1,\"39\":1,\"50\":1,\"51\":2,\"52\":1,\"53\":1,\"55\":1,\"59\":1,\"60\":2,\"61\":1,\"62\":1,\"63\":1,\"66\":1,\"70\":1,\"71\":2,\"72\":1,\"73\":1,\"75\":1,\"78\":1,\"85\":1,\"86\":2,\"87\":1,\"88\":1,\"94\":1,\"95\":2,\"96\":1,\"97\":1,\"99\":1,\"108\":1},\"1\":{\"28\":1,\"38\":1,\"40\":2,\"51\":2,\"62\":1,\"75\":1,\"76\":1,\"78\":4,\"87\":1,\"109\":1,\"114\":1,\"115\":1,\"116\":1,\"120\":1,\"123\":1,\"139\":1}}],[\"教程\",{\"0\":{\"22\":1,\"135\":1}}],[\"软件包支持\",{\"0\":{\"106\":1}}],[\"软件包\",{\"1\":{\"25\":1,\"40\":2,\"41\":1,\"59\":1}}],[\"软件\",{\"0\":{\"20\":1}}],[\"学习笔记\",{\"0\":{\"19\":1}}],[\"牛排\",{\"1\":{\"17\":1}}],[\"牛里脊位置\",{\"1\":{\"16\":1}}],[\"黑胡椒粒\",{\"1\":{\"16\":1}}],[\"黑胡椒粉\",{\"1\":{\"16\":1}}],[\"蛋清\",{\"1\":{\"16\":1}}],[\"橄榄油\",{\"1\":{\"16\":1}}],[\"海盐\",{\"1\":{\"16\":1}}],[\"洋葱\",{\"1\":{\"16\":1}}],[\"让老板敲好\",{\"1\":{\"16\":1}}],[\"让老板剁好\",{\"1\":{\"12\":1}}],[\"腌制牛排教程\",{\"0\":{\"15\":1}}],[\"视频教程\",{\"0\":{\"14\":1,\"18\":1,\"21\":1}}],[\"鸡汤2\",{\"1\":{\"13\":1}}],[\"鸡汤1\",{\"1\":{\"13\":1}}],[\"呈现\",{\"0\":{\"13\":1,\"17\":1}}],[\"香菇\",{\"1\":{\"12\":1}}],[\"红枣\",{\"1\":{\"12\":1}}],[\"白莲子\",{\"1\":{\"12\":1}}],[\"两根小葱\",{\"1\":{\"12\":1}}],[\"两壶开水\",{\"1\":{\"12\":1}}],[\"一般这样用\",{\"1\":{\"116\":1}}],[\"一般char\",{\"1\":{\"116\":1}}],[\"一般用于\",{\"1\":{\"108\":1}}],[\"一次释放\",{\"1\":{\"115\":1}}],[\"一次完整的操作触发一次\",{\"1\":{\"25\":1}}],[\"一直处于按下状态\",{\"1\":{\"25\":1}}],[\"一小块生姜\",{\"1\":{\"12\":1}}],[\"一根大葱\",{\"1\":{\"12\":1}}],[\"一名嵌入式工程师\",{\"1\":{\"1\":1}}],[\"食盐\",{\"1\":{\"12\":1}}],[\"菜市场切牛排\",{\"1\":{\"16\":1}}],[\"菜市场买鸡\",{\"1\":{\"12\":1}}],[\"菜谱指南\",{\"0\":{\"10\":1}}],[\"准备工作\",{\"0\":{\"12\":1,\"16\":1}}],[\"煲鸡汤教程\",{\"0\":{\"11\":1}}],[\"gd\",{\"1\":{\"139\":1}}],[\"gd32f4xx系列\",{\"1\":{\"139\":1}}],[\"gd32\",{\"0\":{\"137\":1,\"138\":1}}],[\"google\",{\"1\":{\"128\":1}}],[\"google排版方式\",{\"0\":{\"128\":1}}],[\"gzip\",{\"1\":{\"95\":1}}],[\"greater\",{\"1\":{\"75\":2}}],[\"graphviz\",{\"1\":{\"33\":1,\"40\":1,\"56\":1,\"67\":1,\"81\":1}}],[\"graph\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"generated\",{\"1\":{\"81\":2}}],[\"generation\",{\"0\":{\"81\":1}}],[\"general\",{\"1\":{\"75\":1}}],[\"gets\",{\"1\":{\"78\":1}}],[\"get\",{\"1\":{\"46\":5,\"78\":10,\"79\":3}}],[\"gcc\",{\"1\":{\"55\":1}}],[\"github\",{\"0\":{\"6\":1},\"1\":{\"7\":1,\"34\":1,\"42\":1,\"48\":1,\"57\":2,\"68\":1,\"83\":1,\"92\":1,\"111\":1}}],[\"aes\",{\"1\":{\"102\":3,\"106\":1}}],[\"aes256\",{\"1\":{\"95\":1,\"102\":3}}],[\"about\",{\"0\":{\"141\":1}}],[\"above\",{\"1\":{\"82\":1}}],[\"abnormal\",{\"1\":{\"78\":1}}],[\"as\",{\"1\":{\"75\":1,\"78\":1,\"79\":2,\"82\":1}}],[\"ashutosh\",{\"1\":{\"7\":1}}],[\"alignconsecutivemacros\",{\"1\":{\"127\":1,\"128\":1}}],[\"algo\",{\"1\":{\"109\":1}}],[\"allowshortifstatementsonasingleline\",{\"1\":{\"127\":1}}],[\"allowing\",{\"1\":{\"79\":1}}],[\"allowed\",{\"1\":{\"78\":1}}],[\"all\",{\"1\":{\"75\":1,\"78\":5,\"79\":3}}],[\"also\",{\"1\":{\"75\":1}}],[\"agu\",{\"1\":{\"105\":11,\"108\":11,\"109\":6}}],[\"again\",{\"1\":{\"78\":1}}],[\"agreement\",{\"1\":{\"75\":1}}],[\"agile\",{\"0\":{\"5\":1,\"9\":1,\"24\":1,\"30\":1,\"31\":1,\"35\":1,\"40\":1,\"41\":1,\"43\":1,\"49\":1,\"54\":1,\"58\":1,\"64\":1,\"65\":1,\"69\":1,\"74\":1,\"84\":1,\"89\":1,\"90\":1,\"93\":1,\"107\":1,\"134\":1,\"135\":1,\"136\":1},\"1\":{\"25\":5,\"28\":1,\"30\":3,\"31\":12,\"34\":1,\"36\":4,\"38\":1,\"40\":18,\"41\":7,\"42\":1,\"50\":1,\"51\":1,\"52\":1,\"54\":1,\"57\":1,\"59\":1,\"62\":1,\"64\":3,\"65\":14,\"68\":1,\"70\":1,\"73\":1,\"74\":1,\"75\":19,\"78\":29,\"79\":27,\"80\":1,\"82\":1,\"83\":1,\"87\":1,\"88\":1,\"89\":20,\"90\":1,\"92\":1,\"94\":1,\"97\":1,\"99\":4,\"100\":1,\"101\":2,\"102\":3,\"103\":2,\"104\":2,\"105\":7,\"106\":1,\"108\":10,\"109\":30,\"110\":1,\"111\":1}}],[\"adapter\",{\"1\":{\"96\":1,\"105\":1,\"106\":2}}],[\"addr\",{\"1\":{\"79\":3}}],[\"address\",{\"1\":{\"75\":2,\"78\":14,\"79\":7}}],[\"adu\",{\"1\":{\"75\":1}}],[\"after\",{\"1\":{\"75\":6,\"78\":3}}],[\"acmd55\",{\"1\":{\"140\":1}}],[\"access\",{\"0\":{\"79\":1},\"1\":{\"79\":1}}],[\"account\",{\"1\":{\"139\":1}}],[\"accomplish\",{\"1\":{\"75\":1}}],[\"according\",{\"1\":{\"75\":2}}],[\"activity\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"arrays\",{\"1\":{\"79\":4}}],[\"array\",{\"1\":{\"79\":5,\"117\":2}}],[\"area\",{\"1\":{\"78\":3}}],[\"are\",{\"1\":{\"75\":2,\"78\":2,\"79\":1,\"80\":1}}],[\"arg\",{\"1\":{\"41\":1}}],[\"application\",{\"1\":{\"75\":1}}],[\"applies\",{\"1\":{\"75\":1}}],[\"apache\",{\"1\":{\"73\":1,\"97\":1}}],[\"apis\",{\"1\":{\"75\":2}}],[\"api介绍\",{\"0\":{\"46\":1}}],[\"api\",{\"0\":{\"109\":1},\"1\":{\"25\":4,\"26\":2,\"41\":2,\"50\":1,\"54\":1,\"59\":1,\"60\":2,\"70\":1,\"71\":1,\"78\":6}}],[\"attributes\",{\"1\":{\"78\":9}}],[\"at\",{\"1\":{\"71\":1,\"78\":1,\"139\":1}}],[\"at32f437\",{\"1\":{\"70\":2,\"80\":2}}],[\"atof\",{\"1\":{\"54\":1}}],[\"atoi\",{\"1\":{\"54\":1}}],[\"answer\",{\"1\":{\"78\":1}}],[\"ansi\",{\"1\":{\"50\":1}}],[\"an\",{\"1\":{\"75\":2,\"79\":2}}],[\"any\",{\"1\":{\"70\":1,\"71\":2}}],[\"and\",{\"1\":{\"30\":1,\"40\":1,\"64\":1,\"71\":7,\"72\":1,\"75\":9,\"78\":28,\"79\":8,\"80\":2,\"81\":1,\"82\":1}}],[\"auto\",{\"1\":{\"31\":1,\"65\":1}}],[\"a\",{\"1\":{\"30\":1,\"64\":1,\"70\":1,\"75\":8,\"78\":4,\"79\":1,\"80\":2,\"82\":1,\"117\":5}}],[\"sd异常日志\",{\"1\":{\"140\":1}}],[\"sdio状态寄存器\",{\"1\":{\"140\":1}}],[\"sdio\",{\"1\":{\"140\":6}}],[\"sd卡初始化过程中先发\",{\"1\":{\"140\":1}}],[\"sd卡\",{\"0\":{\"140\":1}}],[\"sd卡注意事项\",{\"0\":{\"138\":1}}],[\"swtich\",{\"1\":{\"123\":1}}],[\"switch内的表达式计算被8除的余数\",{\"1\":{\"123\":1}}],[\"switch\",{\"1\":{\"120\":1,\"123\":1}}],[\"switch还可以这么玩\",{\"1\":{\"119\":1}}],[\"system\",{\"1\":{\"106\":1}}],[\"systems\",{\"1\":{\"75\":1}}],[\"spi\",{\"1\":{\"105\":1}}],[\"special\",{\"1\":{\"75\":7,\"78\":1,\"79\":2,\"80\":2}}],[\"sal\",{\"1\":{\"88\":1}}],[\"same\",{\"1\":{\"71\":1}}],[\"scr\",{\"1\":{\"140\":1}}],[\"scan\",{\"1\":{\"82\":1}}],[\"scenario\",{\"1\":{\"70\":1}}],[\"sft\",{\"1\":{\"78\":1}}],[\"small\",{\"1\":{\"75\":3}}],[\"sortincludes\",{\"1\":{\"127\":1,\"128\":1}}],[\"solves\",{\"1\":{\"82\":1}}],[\"solution\",{\"1\":{\"75\":1}}],[\"source\",{\"1\":{\"72\":1}}],[\"slavecallback\",{\"1\":{\"79\":1}}],[\"slave\",{\"0\":{\"77\":1,\"79\":1},\"1\":{\"75\":11,\"78\":31,\"79\":27,\"80\":2}}],[\"slaves\",{\"1\":{\"71\":1}}],[\"slightly\",{\"1\":{\"75\":1}}],[\"slist\",{\"1\":{\"41\":2}}],[\"such\",{\"1\":{\"78\":1}}],[\"successfully\",{\"1\":{\"78\":1}}],[\"successful\",{\"1\":{\"78\":1,\"79\":3}}],[\"support\",{\"0\":{\"82\":1},\"1\":{\"71\":1}}],[\"supports\",{\"1\":{\"70\":2,\"71\":2,\"80\":2}}],[\"summary\",{\"0\":{\"6\":1}}],[\"semaphore\",{\"1\":{\"75\":1}}],[\"select\",{\"1\":{\"75\":1}}],[\"send\",{\"1\":{\"75\":6,\"78\":12,\"120\":1,\"123\":1,\"140\":2}}],[\"see\",{\"1\":{\"70\":1,\"73\":1,\"76\":1,\"79\":1}}],[\"session\",{\"1\":{\"46\":9,\"47\":1}}],[\"serialize\",{\"1\":{\"75\":1}}],[\"serial\",{\"1\":{\"40\":4,\"71\":1,\"75\":1,\"121\":1}}],[\"setting\",{\"1\":{\"75\":2}}],[\"sets\",{\"1\":{\"75\":2}}],[\"set\",{\"1\":{\"25\":3,\"31\":4,\"40\":10,\"46\":5,\"65\":1,\"75\":12,\"78\":3,\"79\":3,\"89\":12,\"109\":3,\"139\":1}}],[\"simply\",{\"1\":{\"79\":1}}],[\"simple\",{\"0\":{\"79\":1},\"1\":{\"40\":1,\"72\":1}}],[\"single\",{\"1\":{\"78\":2}}],[\"since\",{\"1\":{\"71\":1}}],[\"sizeof\",{\"1\":{\"116\":1,\"117\":1}}],[\"size\",{\"1\":{\"40\":4,\"75\":4,\"79\":1,\"89\":6,\"105\":3,\"109\":2}}],[\"stm32f4xx\",{\"1\":{\"139\":2}}],[\"stm32f407\",{\"0\":{\"138\":1}}],[\"style\",{\"1\":{\"126\":2}}],[\"step\",{\"1\":{\"109\":11}}],[\"sticky\",{\"1\":{\"78\":1}}],[\"still\",{\"1\":{\"78\":2,\"79\":1}}],[\"store\",{\"1\":{\"78\":4}}],[\"stores\",{\"1\":{\"75\":1}}],[\"stop\",{\"1\":{\"31\":1,\"65\":1}}],[\"strictness\",{\"1\":{\"78\":1}}],[\"strict\",{\"1\":{\"78\":2}}],[\"strcmp\",{\"1\":{\"54\":1}}],[\"strstr\",{\"1\":{\"54\":1}}],[\"structure\",{\"0\":{\"72\":1}}],[\"struct\",{\"1\":{\"41\":1,\"78\":1,\"79\":5,\"105\":1,\"108\":3,\"116\":4,\"117\":2}}],[\"stat\",{\"1\":{\"140\":1}}],[\"static\",{\"1\":{\"65\":1,\"139\":2}}],[\"staggered\",{\"1\":{\"75\":1}}],[\"stack\",{\"1\":{\"40\":2,\"70\":1,\"89\":2}}],[\"starting\",{\"1\":{\"78\":4,\"79\":1}}],[\"start\",{\"1\":{\"31\":1,\"65\":1,\"79\":2}}],[\"src\",{\"1\":{\"27\":1,\"37\":1,\"61\":1,\"72\":1,\"86\":1,\"96\":1,\"108\":7,\"109\":2}}],[\"s\",{\"1\":{\"7\":1,\"121\":1,\"123\":1}}],[\"skills\",{\"0\":{\"2\":1}}],[\"🔗传送门\",{\"1\":{\"8\":1}}],[\"🔗介绍\",{\"1\":{\"5\":1}}],[\"📘\",{\"0\":{\"4\":1}}],[\"关于我\",{\"0\":{\"1\":1}}],[\"关于本站\",{\"0\":{\"0\":1,\"8\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
