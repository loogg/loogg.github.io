import{_ as l,r as d,o,c,a,b as e,d as i,e as n}from"./app-c238f2fb.js";const r={},t=n(`<h2 id="nano-实践" tabindex="-1"><a class="header-anchor" href="#nano-实践" aria-hidden="true">#</a> Nano 实践</h2><div class="hint-container info"><p class="hint-container-title">官方文档数据</p><p><strong>资源占用小：</strong> 对 RAM 与 ROM 的开销非常小，在支持 semaphore 和 mailbox 特性，并运行两个线程 (main 线程 + idle 线程) 情况下，ROM 和 RAM 依然保持着极小的尺寸，RAM 占用约 1K 左右，ROM 占用 4K 左右。</p><p>Nano 资源占用情况举例：在运行两个线程 (main 线程 + idle 线程) 情况下，ROM 和 RAM 依然保持着极小的尺寸。以下是基于 Cortex M3 的 MDK 工程编译结果（优化等级 3）。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 4000 (   3.91kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              1168 (   1.14kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       4092 (   4.00kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="裸机" tabindex="-1"><a class="header-anchor" href="#裸机" aria-hidden="true">#</a> 裸机</h3><p>CubeMX 生成的 MDK 工程编译结果 (优化等级 3)</p>`,4),p={href:"https://github.com/loogg/STM32F4_ATK_Explorer_NANO/tree/nos",target:"_blank",rel:"noopener noreferrer"},u=n(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 3688 (   3.60kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              1648 (   1.61kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       3704 (   3.62kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="适配-nano" tabindex="-1"><a class="header-anchor" href="#适配-nano" aria-hidden="true">#</a> 适配 Nano</h3><p>添加 RT-Thread Nano 4.1.1 到工程 (优化等级 3), 支持 semaphore 和 mailbox 特性，并运行两个线程 (main 线程 + idle 线程)</p>`,3),B={href:"https://github.com/loogg/STM32F4_ATK_Explorer_NANO/tree/nano",target:"_blank",rel:"noopener noreferrer"},h=n(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 8008 (   7.82kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2904 (   2.84kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       8144 (   7.95kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="两者比较差值" tabindex="-1"><a class="header-anchor" href="#两者比较差值" aria-hidden="true">#</a> 两者比较差值</h3><p>基本一致。工程中使用的是 CubeMX 中 4.1.1 版本的 RT-Thread Nano 组件。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 4320 (   4.22kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              1256 (   1.23kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       4440 (   4.33kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整版-4-1-x" tabindex="-1"><a class="header-anchor" href="#完整版-4-1-x" aria-hidden="true">#</a> 完整版 4.1.X</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>以下测试数据基于 4.1.1 版本，优化等级 3。</p></div>`,6),v={href:"https://github.com/loogg/STM32F4_ATK_Explorer_NANO/tree/rtt4.1.1",target:"_blank",rel:"noopener noreferrer"},m=n(`<h3 id="极简版" tabindex="-1"><a class="header-anchor" href="#极简版" aria-hidden="true">#</a> 极简版</h3><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如 Nano 一般，裁剪成支持 semaphore 和 mailbox 特性，并运行两个线程 (main 线程 + idle 线程)。</p></div><p>与 <a href="#%E9%80%82%E9%85%8D-nano">适配 Nano</a> 基本一致。RAM 较小是因为 <code>HEAP</code> 差异:</p><ul><li><a href="#%E8%A3%B8%E6%9C%BA">裸机</a>和 <a href="#%E9%80%82%E9%85%8D-nano">适配 Nano</a> 中 <code>HEAP</code> 为 512 字节。</li><li>本工程中 <code>HEAP</code> 默认值为 0。</li></ul><p><code>menuconfig</code> 导入配置文件 <code>.config.minimalism</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 8200 (   8.01kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2400 (   2.34kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       8340 (   8.14kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对接控制台" tabindex="-1"><a class="header-anchor" href="#对接控制台" aria-hidden="true">#</a> 对接控制台</h3>`,7),b={href:"https://github.com/cherry-embedded/CherryRB",target:"_blank",rel:"noopener noreferrer"},R=n(`<h4 id="不使用设备框架" tabindex="-1"><a class="header-anchor" href="#不使用设备框架" aria-hidden="true">#</a> 不使用设备框架</h4><ul><li>实现打印</li></ul><p><code>menuconfig</code> 导入配置文件 <code>.config.print</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 9828 (   9.60kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2592 (   2.53kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       9968 (   9.73kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>对接 FinSH</li></ul><p><code>menuconfig</code> 导入配置文件 <code>.config.shell</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                16808 (  16.41kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              7648 (   7.47kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      17016 (  16.62kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用设备框架" tabindex="-1"><a class="header-anchor" href="#使用设备框架" aria-hidden="true">#</a> 使用设备框架</h4><ul><li>实现打印</li></ul><p><code>menuconfig</code> 导入配置文件 <code>.config.device_print</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                10504 (  10.26kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2728 (   2.66kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      10716 (  10.46kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>对接 Finsh</li></ul><p><code>menuconfig</code> 导入配置文件 <code>.config.device_shell</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                18784 (  18.34kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              7704 (   7.52kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      19012 (  18.57kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整版-5-1-x" tabindex="-1"><a class="header-anchor" href="#完整版-5-1-x" aria-hidden="true">#</a> 完整版 5.1.X</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>以下测试数据基于 5.1.0 版本，优化等级 3。</p></div>`,16),k={href:"https://github.com/loogg/STM32F4_ATK_Explorer_NANO/tree/rtt5.1.0",target:"_blank",rel:"noopener noreferrer"},g=n(`<h3 id="一键配置" tabindex="-1"><a class="header-anchor" href="#一键配置" aria-hidden="true">#</a> 一键配置</h3><div class="hint-container info"><p class="hint-container-title">RT_USING_NANO</p><p>5.1.X 版本提供了一键配置 Nano 选项</p><p>裁剪成支持 semaphore 和 mailbox 特性，并运行两个线程 (main 线程 + idle 线程)。</p></div><p><code>menuconfig</code> 导入配置文件 <code>.config.nano</code>，编译后资源占用数据：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 9008 (   8.80kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2440 (   2.38kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       9172 (   8.96kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="完整裁剪" tabindex="-1"><a class="header-anchor" href="#完整裁剪" aria-hidden="true">#</a> 完整裁剪</h3><p>同 <a href="#%E5%AE%8C%E6%95%B4%E7%89%88-4-1-x">完整版 4.1.X</a></p><ul><li><code>menuconfig</code> 导入配置文件 <code>.config.minimalism</code>，编译后资源占用数据：</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                 9264 (   9.05kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2440 (   2.38kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)       9428 (   9.21kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>menuconfig</code> 导入配置文件 <code>.config.print</code>，编译后资源占用数据：</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                10892 (  10.64kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2640 (   2.58kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      11056 (  10.80kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>menuconfig</code> 导入配置文件 <code>.config.shell</code>，编译后资源占用数据：</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                19560 (  19.10kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              7840 (   7.66kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      19724 (  19.26kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>menuconfig</code> 导入配置文件 <code>.config.device_print</code>，编译后资源占用数据：</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                11708 (  11.43kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              2848 (   2.78kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      11844 (  11.57kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>menuconfig</code> 导入配置文件 <code>.config.device_shell</code>，编译后资源占用数据：</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    Total RO  Size (Code + RO Data)                21496 (  20.99kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total RW  Size (RW Data + ZI Data)              7912 (   7.73kB)</span></span>
<span class="line"><span style="color:#ABB2BF;">    Total ROM Size (Code + RO Data + RW Data)      21680 (  21.17kB)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><h3 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h3><ul><li><code>RT-Thread 完整版</code> 通过裁剪可以完全媲美 <code>RT-Thread Nano</code></li><li><code>5.1.0</code> 相比 <code>4.1.1</code> 占用 <code>ROM</code> 略大，但提供 <code>一键配置 Nano(RT_USING_NANO)</code> 选项，更加方便</li><li>使能设备框架 (<code>RT_USING_DEVICE</code>) 后，<code>ROM</code> 占用约多 1K 左右</li></ul><h3 id="为何推荐完整版" tabindex="-1"><a class="header-anchor" href="#为何推荐完整版" aria-hidden="true">#</a> 为何推荐完整版</h3><ul><li>完整版 <code>RT-Thread</code> 有丰富的组件、驱动及软件包等功能，且社区讨论更多以此为主</li><li>以往没有测试数据和具体实例比对 <code>Nano</code> 和完整版，很多入门初学者不知从何入手，希望通过这篇文章能有改善</li></ul>`,21);function D(O,T){const s=d("ExternalLinkIcon");return o(),c("div",null,[t,a("p",null,[a("a",p,[e("仓库链接"),i(s)])]),u,a("p",null,[a("a",B,[e("仓库链接"),i(s)])]),h,a("p",null,[a("a",v,[e("仓库链接"),i(s)])]),m,a("p",null,[e("使用 "),a("a",b,[e("CherryRingBuffer"),i(s)]),e("。")]),R,a("p",null,[a("a",k,[e("仓库链接"),i(s)])]),g])}const A=l(r,[["render",D],["__file","裁剪分析.html.vue"]]);export{A as default};
