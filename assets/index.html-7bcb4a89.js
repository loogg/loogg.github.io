import{_ as n,r as l,o,c as r,a as e,b as t,e as a,f as c}from"./app-7cafe3c1.js";const i="/assets/fastlz-da86d5bf.jpg",d={},g=e("h1",{id:"fastlz",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fastlz","aria-hidden":"true"},"#"),t(" FastLZ")],-1),p=e("h2",{id:"_1、介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1、介绍","aria-hidden":"true"},"#"),t(" 1、介绍")],-1),h={href:"https://github.com/RT-Thread-packages/fastlz",target:"_blank",rel:"noopener noreferrer"},b={href:"http://fastlz.org/download.htm",target:"_blank",rel:"noopener noreferrer"},f={href:"http://fastlz.org/index.html",target:"_blank",rel:"noopener noreferrer"},u=c(`<h2 id="_2、获取方式" tabindex="-1"><a class="header-anchor" href="#_2、获取方式" aria-hidden="true">#</a> 2、获取方式</h2><ul><li>使用 menuconfig</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">  RT-Thread online packages ---&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">      miscellaneous packages ---&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">          [*] Fastlz: A portable real-time compression library</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、示例介绍" tabindex="-1"><a class="header-anchor" href="#_3、示例介绍" aria-hidden="true">#</a> 3、示例介绍</h2><h3 id="_3-1-获取示例" tabindex="-1"><a class="header-anchor" href="#_3-1-获取示例" aria-hidden="true">#</a> 3.1 获取示例</h3><ul><li>配置使能示例选项 <code>Enable using fastlz sample</code>;</li><li>配置压缩等级选项，配置为level 1（有两种等级 1 or 2，level 1 压缩速度最快， level 2 压缩比大）;</li><li>配置包版本选为最新版 <code>latest_version</code> .</li></ul><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-运行示例" tabindex="-1"><a class="header-anchor" href="#_3-2-运行示例" aria-hidden="true">#</a> 3.2 运行示例</h3><p>该示例为一个简单的文件压缩和解压的例程，需要依赖文件系统，用到的命令有两个<code> -c</code>和 <code>-d</code>， <code>-c</code>命令压缩一个文件到另一个文件，<code>-d</code>命令解压一个文件到另一个文件。<br> 使用方式：<br> msh cmd 压缩： <code>fastlz_test -c /file.bin /file.cmprs.bin</code><br> msh cmd 解压： <code>fastlz_test -d /file.cmprs.bin /file_dcmprs.bin</code></p><pre><code>msh /&gt;fastlz_test -c /file.bin /file.cmprs.bin
[fastlz]compress start : &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
[fastlz]compressed 469848 bytes into 363495 bytes , compression ratio is 77%!
msh /&gt;
msh /&gt;fastlz_test -d /file.cmprs.bin /file_dcmprs.bin
[fastlz]decompress start : &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
[fastlz]decompressed 363495 bytes into 469848 bytes !
</code></pre><h2 id="_4、注意事项" tabindex="-1"><a class="header-anchor" href="#_4、注意事项" aria-hidden="true">#</a> 4、注意事项</h2><h3 id="_4-1-与官方源码差异" tabindex="-1"><a class="header-anchor" href="#_4-1-与官方源码差异" aria-hidden="true">#</a> 4.1 与官方源码差异</h3><p>FastLZ 源码中使用了静态内存分配，预置了一个 32Kbytes 大小的 buffer，占用堆栈资源过大，修改了源码，使用动态内存分配替换原有的静态内存分配。</p><p>对源码 <code>fastlz.c</code> 进行如下变动，移植官方代码的时候需要注意：</p><ol><li>添加动态内存分配定义</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;rtthread.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">malloc</span><span style="color:#ABB2BF;">     rt_malloc</span></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">free</span><span style="color:#ABB2BF;">       rt_free</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用 <code>malloc</code> 为 <code>htab</code> 分配内存</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> flzuint8</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">htab</span><span style="color:#ABB2BF;">[HASH_SIZE];</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>替换为</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> flzuint8</span><span style="color:#C678DD;">**</span><span style="color:#ABB2BF;"> htab </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> flzuint8</span><span style="color:#C678DD;">**</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;">malloc</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">flzuint8</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">HASH_SIZE</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>在 <code>return</code> 前使用 <code>free</code> 释放内存</li></ol><h2 id="_5、参考资料" tabindex="-1"><a class="header-anchor" href="#_5、参考资料" aria-hidden="true">#</a> 5、参考资料</h2>`,22),m={href:"http://fastlz.org/support.htm",target:"_blank",rel:"noopener noreferrer"};function _(y,B){const s=l("ExternalLinkIcon");return o(),r("div",null,[g,p,e("p",null,[t("FastLZ 是一个快速无损压缩库， 仅包含两个文件， 使用简单， 易于集成。 这个 "),e("a",h,[t("FastLZ"),a(s)]),t(" 库是 RT-thread 针对官方"),e("a",b,[t("FastLZ"),a(s)]),t("的C库的移植， 有关 fastlz 的更多信息，请参阅"),e("a",f,[t("http://fastlz.org/index.html"),a(s)]),t(" 。")]),u,e("ul",null,[e("li",null,[t("FastLZ 官方网站："),e("a",m,[t("http://fastlz.org/index.html"),a(s)])])])])}const x=n(d,[["render",_],["__file","index.html.vue"]]);export{x as default};
