const e=JSON.parse('{"key":"v-7da07a0b","path":"/note/RT-Thread/%E5%90%84%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86.html","title":"RT-Thread 各版本问题整理","lang":"zh-CN","frontmatter":{"title":"RT-Thread 各版本问题整理","category":["笔记"],"tag":["RT-Thread"],"description":"RT-Thread 4.1.0 SD 驱动框架 SD 初始化失败移除 blk_dev 时存在双向链表 next 和 prev 都为 NULL 的情况，造成死循环。 修改 rt_mmcsd_blk_remove: void rt_mmcsd_blk_remove(struct rt_mmcsd_card *card) { rt_list_t *l, *n; struct mmcsd_blk_device *blk_dev; + if(card == RT_NULL) + { + LOG_E(\\"card is null!\\"); + return; + } + + if(rt_list_isempty(&amp;card-&gt;blk_devices)) + { + LOG_E(\\"card blk_devices is empty!\\"); + return; + } + + if ((&amp;card-&gt;blk_devices)-&gt;next == RT_NULL) + { + LOG_E(\\"card blk_devices is null!\\"); + return; + } for (l = (&amp;card-&gt;blk_devices)-&gt;next, n = l-&gt;next; l != &amp;card-&gt;blk_devices; l = n, n=n-&gt;next) { blk_dev = (struct mmcsd_blk_device *)rt_list_entry(l, struct mmcsd_blk_device, list); if (blk_dev-&gt;card == card) { /* unmount file system */ const char * mounted_path = dfs_filesystem_get_mounted_path(&amp;(blk_dev-&gt;dev)); if (mounted_path) { dfs_unmount(mounted_path); LOG_D(\\"unmount file system %s for device %s.\\\\r\\\\n\\", mounted_path, blk_dev-&gt;dev.parent.name); } rt_sem_delete(blk_dev-&gt;part.lock); rt_device_unregister(&amp;blk_dev-&gt;dev); rt_list_remove(&amp;blk_dev-&gt;list); rt_free(blk_dev); } } }","head":[["meta",{"property":"og:url","content":"https://loogg.github.io/note/RT-Thread/%E5%90%84%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"马龙伟的博客"}],["meta",{"property":"og:title","content":"RT-Thread 各版本问题整理"}],["meta",{"property":"og:description","content":"RT-Thread 4.1.0 SD 驱动框架 SD 初始化失败移除 blk_dev 时存在双向链表 next 和 prev 都为 NULL 的情况，造成死循环。 修改 rt_mmcsd_blk_remove: void rt_mmcsd_blk_remove(struct rt_mmcsd_card *card) { rt_list_t *l, *n; struct mmcsd_blk_device *blk_dev; + if(card == RT_NULL) + { + LOG_E(\\"card is null!\\"); + return; + } + + if(rt_list_isempty(&amp;card-&gt;blk_devices)) + { + LOG_E(\\"card blk_devices is empty!\\"); + return; + } + + if ((&amp;card-&gt;blk_devices)-&gt;next == RT_NULL) + { + LOG_E(\\"card blk_devices is null!\\"); + return; + } for (l = (&amp;card-&gt;blk_devices)-&gt;next, n = l-&gt;next; l != &amp;card-&gt;blk_devices; l = n, n=n-&gt;next) { blk_dev = (struct mmcsd_blk_device *)rt_list_entry(l, struct mmcsd_blk_device, list); if (blk_dev-&gt;card == card) { /* unmount file system */ const char * mounted_path = dfs_filesystem_get_mounted_path(&amp;(blk_dev-&gt;dev)); if (mounted_path) { dfs_unmount(mounted_path); LOG_D(\\"unmount file system %s for device %s.\\\\r\\\\n\\", mounted_path, blk_dev-&gt;dev.parent.name); } rt_sem_delete(blk_dev-&gt;part.lock); rt_device_unregister(&amp;blk_dev-&gt;dev); rt_list_remove(&amp;blk_dev-&gt;list); rt_free(blk_dev); } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-14T14:16:42.000Z"}],["meta",{"property":"article:author","content":"马龙伟"}],["meta",{"property":"article:tag","content":"RT-Thread"}],["meta",{"property":"article:modified_time","content":"2024-12-14T14:16:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RT-Thread 各版本问题整理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-14T14:16:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"马龙伟\\",\\"url\\":\\"https://loogg.github.io\\"}]}"]]},"headers":[{"level":2,"title":"RT-Thread 4.1.0","slug":"rt-thread-4-1-0","link":"#rt-thread-4-1-0","children":[{"level":3,"title":"SD 驱动框架","slug":"sd-驱动框架","link":"#sd-驱动框架","children":[]},{"level":3,"title":"F4 SD 写入时偶尔长时间等待","slug":"f4-sd-写入时偶尔长时间等待","link":"#f4-sd-写入时偶尔长时间等待","children":[]}]}],"git":{"createdTime":1734185802000,"updatedTime":1734185802000,"contributors":[{"name":"mlw","email":"2544047213@qq.com","commits":1}]},"readingTime":{"minutes":1,"words":301},"filePathRelative":"note/RT-Thread/各版本问题整理.md","localizedDate":"2024年12月14日","excerpt":"<h2> RT-Thread 4.1.0</h2>\\n<h3> SD 驱动框架</h3>\\n<p>SD 初始化失败移除 <code>blk_dev</code> 时存在双向链表 <code>next</code> 和 <code>prev</code> 都为 <code>NULL</code> 的情况，造成死循环。</p>\\n<p>修改 <code>rt_mmcsd_blk_remove</code>:</p>\\n<div class=\\"language-diff line-numbers-mode\\" data-ext=\\"diff\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #ABB2BF\\">void rt_mmcsd_blk_remove(struct rt_mmcsd_card *card)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    rt_list_t *l, *n;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    struct mmcsd_blk_device *blk_dev;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     if(card == RT_NULL)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         LOG_E(\\"card is null!\\");</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         return;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     if(rt_list_isempty(&amp;card-&gt;blk_devices))</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         LOG_E(\\"card blk_devices is empty!\\");</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         return;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     if ((&amp;card-&gt;blk_devices)-&gt;next == RT_NULL)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         LOG_E(\\"card blk_devices is null!\\");</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+         return;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #98C379\\">+     }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    for (l = (&amp;card-&gt;blk_devices)-&gt;next, n = l-&gt;next; l != &amp;card-&gt;blk_devices; l = n, n=n-&gt;next)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        blk_dev = (struct mmcsd_blk_device *)rt_list_entry(l, struct mmcsd_blk_device, list);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        if (blk_dev-&gt;card == card)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            /* unmount file system */</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            const char * mounted_path = dfs_filesystem_get_mounted_path(&amp;(blk_dev-&gt;dev));</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            if (mounted_path)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                  dfs_unmount(mounted_path);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                  LOG_D(\\"unmount file system %s for device %s.\\\\r\\\\n\\", mounted_path, blk_dev-&gt;dev.parent.name);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            rt_sem_delete(blk_dev-&gt;part.lock);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            rt_device_unregister(&amp;blk_dev-&gt;dev);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            rt_list_remove(&amp;blk_dev-&gt;list);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            rt_free(blk_dev);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
